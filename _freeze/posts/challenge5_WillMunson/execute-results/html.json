{
  "hash": "b34f5b7d6ce6fce519a421859ccaef74",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Will Munson\"\nauthor: \"Will Munson\"\ndescription: \"Introduction to Visualization\"\ndate: \"08/22/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_hh\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal ⭐\n-   pathogen cost ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   railroads ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRailroads <- read_csv(\"_data/railroad_2012_clean_county.csv\", show_col_types = FALSE)\n```\n:::\n\n\n### Briefly describe the data\n\n    This dataset is based off of the number of railroad employees who work within each county of the United States. Surprisingly, the data looks incredibly tidy and might not need to be mutated. \n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n    I think the one thing that might be a little bit confusing here is the fact that the county names might correlate with multiple values.\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(unique(Railroads$county))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1709\n```\n:::\n\n```{.r .cell-code}\nRailroads %>%\n  group_by(county) %>%\n  summarize(n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,709 × 2\n   county        n\n   <chr>     <int>\n 1 ABBEVILLE     1\n 2 ACADIA        1\n 3 ACCOMACK      1\n 4 ADA           1\n 5 ADAIR         4\n 6 ADAMS        12\n 7 ADDISON       1\n 8 AIKEN         1\n 9 AITKIN        1\n10 ALACHUA       1\n# … with 1,699 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\n    Let's merge the state and county variables together. \n    \nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRailroads <- Railroads %>%\n  unite('State and County', county:state, remove = FALSE)\n```\n:::\n\n\n## Univariate Visualizations\n\n::: {.cell}\n\n```{.r .cell-code}\nRailroads %>%\n  group_by(state) %>%\n  summarise(sum_emp = sum(total_employees)) %>%\n  ggplot(aes(x = sum_emp)) +\n  geom_histogram(bins = 20, alpha = 0.5, fill = \"blue\")\n```\n\n::: {.cell-output-display}\n![](challenge5_WillMunson_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRailroads %>%\n  ggplot(aes(x = state, y = total_employees, fill = county)) + \n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `f()`:\n! stat_count() can only have an x or y aesthetic.\n```\n:::\n\n::: {.cell-output-display}\n![](challenge5_WillMunson_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nAny additional comments?\n\n    Apparently I'm having a little bit of trouble with the bivariate one. I'll get back to this later.",
    "supporting": [
      "challenge5_WillMunson_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}