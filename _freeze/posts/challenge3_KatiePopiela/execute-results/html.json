{
  "hash": "f8d143cb08eeb305d1c195096a1bad6d",
  "result": {
    "markdown": "---\ntitle: \"Challenge3_KatiePopiela\"\neditor: visual\n---\n\n\n## 1) Read in a dataset and describe it using words and visuals.\n## 2) Identify what needs to be done to tide the current data\n## 3) Anticipate the shape of the pivoted data\n## 4) Pivot the data into tidy format using 'pivot_longer'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ dplyr   1.0.9\n✔ tibble  3.1.8     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n✔ purrr   0.3.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\nanimal_weight <- read.csv(\"_data/animal_weight.csv\")\n\n#So this dataset covers the (I'm assuming average) weight of different farm animals/farm-adjacent animals in difference areas of the world. For instance, some columns are the usual \"cattle, chickens, swine, etc.\", but others include camels, llamas, and buffalo. \n\n#The geographic areas the data was pulled from are: Indian Subcontinent, Eastern Europe, Africa, Oceania, Western Europe, Latin America, Asia, Middle East, and Northern America.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#NOTE: The data does not specify the unit of weight, but given that Buffalo weigh way more than 380lbs I'm assuming that the measurements are in kilos/kg.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanimal_weight %>%\n  colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"IPCC.Area\"          \"Cattle...dairy\"     \"Cattle...non.dairy\"\n [4] \"Buffaloes\"          \"Swine...market\"     \"Swine...breeding\"  \n [7] \"Chicken...Broilers\" \"Chicken...Layers\"   \"Ducks\"             \n[10] \"Turkeys\"            \"Sheep\"              \"Goats\"             \n[13] \"Horses\"             \"Asses\"              \"Mules\"             \n[16] \"Camels\"             \"Llamas\"            \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#In order to make the tidying process easier I'm going to start by renaming the columns. As they are, the names aren't super easy to code, so lets fix that!\n\nanimal_weightr1 <- animal_weight %>% \n  rename(ipcc_area = 'IPCC.Area', cattle_dairy = 'Cattle...dairy', cattle_nondairy = 'Cattle...non.dairy', special_buffaloes = 'Buffaloes', swine_market = 'Swine...market', swine_breeding = 'Swine...breeding', chicken_br = 'Chicken...Broilers', chicken_lyr = 'Chicken...Layers', ducks = 'Ducks', turkeys = 'Turkeys', standard_sheep = 'Sheep', standard_goats = 'Goats', equine_horses = 'Horses', equine_asses = 'Asses', equine_mules = 'Mules', special_camels = 'Camels', special_llamas = 'Llamas')\n\nview(animal_weightr1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Now that everything has been renamed, I'm going to start re-grouping columns using the pivot_longer() function. I tried to streamline this but I couldn't get it to work so I did all of it individually.\n\nanimal_weightr2 <- animal_weightr1 %>%\n  pivot_longer(cols = c(contains(\"cattle\")), names_to = \"all_cattle\", values_to = \"Cattle Weight kg\") %>%\n  arrange(all_cattle)\nanimal_weightr3 <- animal_weightr2 %>%\n  pivot_longer(cols = c(contains(\"equine\")), names_to = \"all_equine\", values_to = \"Equine Weight kg\") %>%\n  arrange(all_equine)\nanimal_weightr4 <- animal_weightr3 %>%\n  pivot_longer(cols = c(contains(\"special\")), names_to = \"specialty_animals\", values_to = \"Specialized Weight kg\") %>%\n  arrange(specialty_animals)\nanimal_weightr5 <- animal_weightr4 %>%\n  pivot_longer(cols = c(contains(\"standard\")), names_to = \"standard_farm\", values_to = \"Standard Weight kg\") %>%\n  arrange(standard_farm)\nanimal_weightr6 <- animal_weightr5 %>%\n  pivot_longer(cols = c(contains(\"swine\")), names_to = \"all_swine\", values_to = \"Pigs Weight kg\") %>%\n  arrange(all_swine)\nanimal_weightr7 <- animal_weightr6 %>%\n  pivot_longer(cols = c(contains(\"chicken\")), names_to = \"all_chickens\", values_to = \"Chickens Weight kg\") %>%\n  arrange(all_chickens)\nanimal_weightr8 <- animal_weightr7 %>%\n  pivot_longer(cols = c(\"ducks\",\"turkeys\"), names_to = \"farm_birds\", values_to = \"Farm Birds Weight kg\") %>%\n  arrange(farm_birds)\nview(animal_weightr8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Now that all the columns are grouped together accordingly, I'm going to look more specifically at animals in a specific geographic area. I chose to look at the weight of sheep in Eastern Europe.\n\nanimal_weightr8 %>%\n  select(ipcc_area, standard_farm, `Standard Weight kg`) %>%\n  filter(ipcc_area == \"Eastern Europe\", standard_farm == \"standard_goats\") %>%\n  view()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Since the average weight (kg) for goats in Eastern Europe is 38.5kg, I'm going to add in a different geographical area for the purpose of visuals\n\nanimal_weight_final <- animal_weightr8 %>%\n  select(ipcc_area, standard_farm, `Standard Weight kg`) %>%\n  filter(ipcc_area == c(\"Eastern Europe\",\"Indian Subcontinent\"), standard_farm == \"standard_goats\") %>%\n  view()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(animal_weight_final, mapping = aes(ipcc_area, 'Standard Weight kg')) + geom_jitter()\n```\n\n::: {.cell-output-display}\n![](challenge3_KatiePopiela_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge3_KatiePopiela_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}