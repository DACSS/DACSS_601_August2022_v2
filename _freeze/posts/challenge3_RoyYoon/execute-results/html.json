{
  "hash": "4d94ecb24a392cd71357c1f9dcf2082d",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Instructions\"\nauthor: \"Roy Yoon\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"08/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs_tidy.csv\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs<-read_csv(\"_data/eggs_tidy.csv\")\n\neggs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen extra_l…¹\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>     <dbl>\n 1 January    2004             126         230                    132       230 \n 2 February   2004             128.        226.                   134.      230 \n 3 March      2004             131         225                    137       230 \n 4 April      2004             131         225                    137       234.\n 5 May        2004             131         225                    137       236 \n 6 June       2004             134.        231.                   137       241 \n 7 July       2004             134.        234.                   137       241 \n 8 August     2004             134.        234.                   137       241 \n 9 September  2004             130.        234.                   136.      241 \n10 October    2004             128.        234.                   136.      241 \n# … with 110 more rows, and abbreviated variable name ¹​extra_large_dozen\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\n### About eggs_tidy.csv data set\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen extra_l…¹\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>     <dbl>\n 1 January    2004             126         230                    132       230 \n 2 February   2004             128.        226.                   134.      230 \n 3 March      2004             131         225                    137       230 \n 4 April      2004             131         225                    137       234.\n 5 May        2004             131         225                    137       236 \n 6 June       2004             134.        231.                   137       241 \n 7 July       2004             134.        234.                   137       241 \n 8 August     2004             134.        234.                   137       241 \n 9 September  2004             130.        234.                   136.      241 \n10 October    2004             128.        234.                   136.      241 \n# … with 110 more rows, and abbreviated variable name ¹​extra_large_dozen\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\ncolnames(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"month\"                  \"year\"                   \"large_half_dozen\"      \n[4] \"large_dozen\"            \"extra_large_half_dozen\" \"extra_large_dozen\"     \n```\n:::\n\n```{.r .cell-code}\ndim(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120   6\n```\n:::\n:::\n\n\nThe eggs data set has 120 rows and 6 columns.\n\nThe data examines the monthly price of different egg sizes and amounts from 2004 to 2013.\n\n## Anticipate the End Result\n\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-eggs\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen extra_l…¹\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>     <dbl>\n 1 January    2004             126         230                    132       230 \n 2 February   2004             128.        226.                   134.      230 \n 3 March      2004             131         225                    137       230 \n 4 April      2004             131         225                    137       234.\n 5 May        2004             131         225                    137       236 \n 6 June       2004             134.        231.                   137       241 \n 7 July       2004             134.        234.                   137       241 \n 8 August     2004             134.        234.                   137       241 \n 9 September  2004             130.        234.                   136.      241 \n10 October    2004             128.        234.                   136.      241 \n# … with 110 more rows, and abbreviated variable name ¹​extra_large_dozen\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\n## eggs data set pivot longer (month, year, size, amount, price)\n\n::: {.cell}\n\n```{.r .cell-code}\neggs <- rename(eggs, large_halfdozen = large_half_dozen, xlarge_halfdozen = extra_large_half_dozen, xlarge_dozen = extra_large_dozen)\n\neggs_tidy_longer<- eggs%>%\n  pivot_longer(cols=contains(\"large\"),\n               names_to = c(\"size\", \"amount\"),\n               names_sep=\"_\",\n               values_to = \"price\"\n  )\neggs_tidy_longer\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 5\n   month     year size   amount    price\n   <chr>    <dbl> <chr>  <chr>     <dbl>\n 1 January   2004 large  halfdozen  126 \n 2 January   2004 large  dozen      230 \n 3 January   2004 xlarge halfdozen  132 \n 4 January   2004 xlarge dozen      230 \n 5 February  2004 large  halfdozen  128.\n 6 February  2004 large  dozen      226.\n 7 February  2004 xlarge halfdozen  134.\n 8 February  2004 xlarge dozen      230 \n 9 March     2004 large  halfdozen  131 \n10 March     2004 large  dozen      225 \n# … with 470 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nNew variable the size and amount are now separated and independent variables of each other and price is also aviable as its own variable\n\n\n## Describing Pivoted Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(eggs_tidy_longer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480   5\n```\n:::\n\n```{.r .cell-code}\ncolnames(eggs_tidy_longer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"month\"  \"year\"   \"size\"   \"amount\" \"price\" \n```\n:::\n:::\n\nThe eggs_tidy_longer data set contains 480 rows and 5 columns.\n\nThe columns distinguish month, year, size, amount, and price as variable.\n\nThe variables organized in this manner allows us to better understand and analyze how the variable are indepent from each other when looking at, size, amount, and price.\n\n\n\n",
    "supporting": [
      "challenge3_RoyYoon_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}