{
  "hash": "3d4005295e0dad1b782164cafff2f6f6",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\nauthor: \"Adithya Parupudi\"\ndesription: \"Reading in data and creating a post\"\ndate: \"08/16/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - tidyverse\n  - birds.csv\n  - hw2\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xlsx ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds_data <- read_csv(\"_data/birds.csv\",show_col_types = FALSE)\n#spec(birds_data) -> full column specification\n```\n:::\n\n\nAfter importing the csv file, and I notice that out of the 14 columns, 8 of them are of character type and 6 columns are double. Total rows -\\> 30977!\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n:::\n\n\nColumn names at a glance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  Domai…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961 1000…\n2 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962 1000…\n3 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963 1000…\n4 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964 1000…\n5 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965 1000…\n6 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966 1000…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Area Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n# ℹ Use `colnames()` to see all variable names\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspec_tbl_df [30,977 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Domain Code     : chr [1:30977] \"QA\" \"QA\" \"QA\" \"QA\" ...\n $ Domain          : chr [1:30977] \"Live Animals\" \"Live Animals\" \"Live Animals\" \"Live Animals\" ...\n $ Area Code       : num [1:30977] 2 2 2 2 2 2 2 2 2 2 ...\n $ Area            : chr [1:30977] \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ Element Code    : num [1:30977] 5112 5112 5112 5112 5112 ...\n $ Element         : chr [1:30977] \"Stocks\" \"Stocks\" \"Stocks\" \"Stocks\" ...\n $ Item Code       : num [1:30977] 1057 1057 1057 1057 1057 ...\n $ Item            : chr [1:30977] \"Chickens\" \"Chickens\" \"Chickens\" \"Chickens\" ...\n $ Year Code       : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Year            : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Unit            : chr [1:30977] \"1000 Head\" \"1000 Head\" \"1000 Head\" \"1000 Head\" ...\n $ Value           : num [1:30977] 4700 4900 5000 5300 5500 5800 6600 6290 6300 6000 ...\n $ Flag            : chr [1:30977] \"F\" \"F\" \"F\" \"F\" ...\n $ Flag Description: chr [1:30977] \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `Domain Code` = col_character(),\n  ..   Domain = col_character(),\n  ..   `Area Code` = col_double(),\n  ..   Area = col_character(),\n  ..   `Element Code` = col_double(),\n  ..   Element = col_character(),\n  ..   `Item Code` = col_double(),\n  ..   Item = col_character(),\n  ..   `Year Code` = col_double(),\n  ..   Year = col_double(),\n  ..   Unit = col_character(),\n  ..   Value = col_double(),\n  ..   Flag = col_character(),\n  ..   `Flag Description` = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n\nWe get to see a get a high level view of the column names and its entries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(birds_data$`Item Code`)\n```\n\n::: {.cell-output-display}\n![](challenge1_AdithyaParupudi_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(birds_data$`Area Code`)\n```\n\n::: {.cell-output-display}\n![](challenge1_AdithyaParupudi_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\nUsing the histogram functions, observed that the frequency for item code and area codes respectively.\n",
    "supporting": [
      "challenge1_AdithyaParupudi_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}