{
  "hash": "d5b5743256ef92a3ec92254be5b6a155",
  "result": {
    "markdown": "---\ntitle: \"Final Project Vertical Farming\"\nauthor: \"Will Munson\"\ndate: \"8/29/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\n---\n\n\nFor my final project, I will be looking at data related to soil health. This data will involve a large-scale vertical farm in Brisbane, Australia. \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\nVertical farming is set to be the future of farming and agriculture. While it won't replace traditional agriculture, it will make it so that farming can be done easily in urban areas, and without the need for extra land. This could also help reduce the need to transport goods across the country. Now, the dataset is a bit large, so I might have to limit the size of the data. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nSoilHealth <- read_csv(\"_data/SoilHealthDB_V0.csv\", show_col_types = FALSE)\n\nSoilHealth\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,241 × 273\n   StudyID ExperimentID Author_F Autho…¹ YearP…² Sampl…³ Journal SiteI…⁴ Country\n     <dbl> <lgl>        <chr>    <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>  \n 1       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 2       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 3       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 4       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 5       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 6       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 7       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 8       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n 9       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n10       1 NA           Abawi    G.S.       2000      NA Applie… New Yo… USA    \n# … with 5,231 more rows, 264 more variables: Latitude <dbl>, Longitude <dbl>,\n#   Elevation <dbl>, Tannual <dbl>, MAT <dbl>, Pannual <dbl>, MAP <dbl>,\n#   ClimateType <chr>, TimeAfterCoverCrop <dbl>, Duration <dbl>,\n#   CC_planting_date <lgl>, CC_termination_date <lgl>, Time_Comments <chr>,\n#   SamplingDepth <chr>, SamplingThickness <chr>, SoilDepthGroup <lgl>,\n#   SurfaceSubsurface <lgl>, SoilBD <dbl>, SandPerc <dbl>, SiltPerc <dbl>,\n#   ClayPerc <dbl>, Texture <chr>, SoilpH <dbl>, BackgroundSOC <dbl>, …\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\n\nNow, this is a large dataset, and it'll require a lot of cleaning up in order to obtain the data we need. So, without further ado, let's get rid of some junk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSoilHealth %>%\n  select_if(~!(all(is.na(.)) | all(. == \"\"))) %>%\n  select(-contains(\"Comments\") & -contains(\"Author\") & -contains(\"ClimateType\") & -contains(\"Journal\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,241 × 203\n   StudyID YearP…¹ Sampl…² SiteI…³ Country Latit…⁴ Longi…⁵ Eleva…⁶ Tannual   MAT\n     <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl> <dbl>\n 1       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 2       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 3       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 4       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 5       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 6       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 7       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 8       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n 9       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n10       1    2000      NA New Yo… USA        40.7   -74.0     3.5      NA    NA\n# … with 5,231 more rows, 193 more variables: Pannual <dbl>, MAP <dbl>,\n#   TimeAfterCoverCrop <dbl>, Duration <dbl>, SamplingDepth <chr>,\n#   SamplingThickness <chr>, SoilBD <dbl>, SandPerc <dbl>, SiltPerc <dbl>,\n#   ClayPerc <dbl>, Texture <chr>, SoilpH <dbl>, BackgroundSOC <dbl>,\n#   SOC_NaturalVeg <dbl>, SoilKsat <dbl>, SoilFamily <chr>, CoverCrop <chr>,\n#   CoverCropGroup <chr>, GrainCrop <chr>, GrainCropGroup <chr>,\n#   Rotation_C <chr>, Rotation_T <chr>, Rotation_Diff <chr>, Tillage_C <chr>, …\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\n\nAlright, now, let's take a look at some bar graphs to see how each of these samples differ. Let's start with the crop cover groups that our soil has. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nSoilHealth %>%\n  filter(!is.na(CoverCropGroup)) %>%\n  filter(!str_detect(CoverCropGroup, 'Not_available')) %>%\n  ggplot(aes(x = CoverCropGroup)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 270))\n```\n\n::: {.cell-output-display}\n![](FinalProject_WillMunson_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nAs we can see here, the full majority of cover crops are within the legume group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSoilHealth %>%\n  filter(!is.na(Texture)) %>%\n  filter(!str_detect(Texture, 'NotAvailable')) %>%\n  ggplot(aes(x = Texture)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 270))\n```\n\n::: {.cell-output-display}\n![](FinalProject_WillMunson_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nThe majority of the samples taken in this study were sandy loam or silty loam, or a mix of the three soil compositions, sand, silt and clay. Now let's take a look at which soil textures are most common with legumes. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nSoilHealth %>%\n  filter(!is.na(Texture)) %>%\n  filter(str_detect(CoverCropGroup, 'Legume')) %>%\n  filter(!str_detect(Texture, 'NotAvailable')) %>%\n  ggplot(aes(x = Texture)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 270))\n```\n\n::: {.cell-output-display}\n![](FinalProject_WillMunson_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nAgain, we notice a similar pattern, except the legumes appear to show less of a difference between silt loam samples and sandy loam samples. This must indicate that legumes thrive within sandy loam or silty loam environments, which usually retain more water. \n\nLet's take a look at where these samples were studied too.\n\n::: {.cell}\n\n```{.r .cell-code}\nSoilHealth %>%\n  filter(!is.na(Country)) %>%\n  filter(!is.na(CoverCropGroup)) %>%\n  filter(!is.na(Texture)) %>%\n  filter(!str_detect(CoverCropGroup, 'Not_available')) %>%\n  filter(!str_detect(Texture, 'NotAvailable')) %>%\n  ggplot(aes(x = Country)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 270))\n```\n\n::: {.cell-output-display}\n![](FinalProject_WillMunson_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nSo, setting up the data so that it excludes any data that isn't readily available or is empty is essential to getting more accurate results. This is interesting, \n\n\n::: {.cell}\n\n```{.r .cell-code}\nSoilHealth %>%\n  filter(!is.na(CoverCropGroup)) %>%\n  #filter(str_detect(CoverCropGroup, 'Rye')) %>%\n  filter(str_detect(Country, 'USA')) %>%\n  filter(!str_detect(CoverCropGroup, 'Not_available')) %>%\n  ggplot(aes(x = CoverCropGroup)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 270))\n```\n\n::: {.cell-output-display}\n![](FinalProject_WillMunson_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "FinalProject_WillMunson_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}