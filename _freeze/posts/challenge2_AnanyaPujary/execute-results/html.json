{
  "hash": "bb5e4dce007921f179865606b26e54e6",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2\"\nauthor: \"Ananya Pujary\"\ndescription: \"Data wrangling: using group() and summarise()\"\ndate: \"08/16/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(skimr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in the Data\n\nI'll be working with the 'hotel_bookings.csv' dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\nhotelbookings <- read_csv(\"_data/hotel_bookings.csv\")\n```\n:::\n\n## Describe the data\n\nFirst, we'll generate a broad overview of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(hotelbookings)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |              |\n|:------------------------|:-------------|\n|Name                     |hotelbookings |\n|Number of rows           |119390        |\n|Number of columns        |32            |\n|_______________________  |              |\n|Column type frequency:   |              |\n|character                |13            |\n|Date                     |1             |\n|numeric                  |18            |\n|________________________ |              |\n|Group variables          |None          |\n\n\n**Variable type: character**\n\n|skim_variable        | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:--------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|hotel                |         0|             1|  10|  12|     0|        2|          0|\n|arrival_date_month   |         0|             1|   3|   9|     0|       12|          0|\n|meal                 |         0|             1|   2|   9|     0|        5|          0|\n|country              |         0|             1|   2|   4|     0|      178|          0|\n|market_segment       |         0|             1|   6|  13|     0|        8|          0|\n|distribution_channel |         0|             1|   3|   9|     0|        5|          0|\n|reserved_room_type   |         0|             1|   1|   1|     0|       10|          0|\n|assigned_room_type   |         0|             1|   1|   1|     0|       12|          0|\n|deposit_type         |         0|             1|  10|  10|     0|        3|          0|\n|agent                |         0|             1|   1|   4|     0|      334|          0|\n|company              |         0|             1|   1|   4|     0|      353|          0|\n|customer_type        |         0|             1|   5|  15|     0|        4|          0|\n|reservation_status   |         0|             1|   7|   9|     0|        3|          0|\n\n\n**Variable type: Date**\n\n|skim_variable           | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-----------------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|reservation_status_date |         0|             1|2014-10-17 |2017-09-14 |2016-08-07 |      926|\n\n\n**Variable type: numeric**\n\n|skim_variable                  | n_missing| complete_rate|    mean|     sd|      p0|     p25|     p50|  p75| p100|hist  |\n|:------------------------------|---------:|-------------:|-------:|------:|-------:|-------:|-------:|----:|----:|:-----|\n|is_canceled                    |         0|             1|    0.37|   0.48|    0.00|    0.00|    0.00|    1|    1|▇▁▁▁▅ |\n|lead_time                      |         0|             1|  104.01| 106.86|    0.00|   18.00|   69.00|  160|  737|▇▂▁▁▁ |\n|arrival_date_year              |         0|             1| 2016.16|   0.71| 2015.00| 2016.00| 2016.00| 2017| 2017|▃▁▇▁▆ |\n|arrival_date_week_number       |         0|             1|   27.17|  13.61|    1.00|   16.00|   28.00|   38|   53|▅▇▇▇▅ |\n|arrival_date_day_of_month      |         0|             1|   15.80|   8.78|    1.00|    8.00|   16.00|   23|   31|▇▇▇▇▆ |\n|stays_in_weekend_nights        |         0|             1|    0.93|   1.00|    0.00|    0.00|    1.00|    2|   19|▇▁▁▁▁ |\n|stays_in_week_nights           |         0|             1|    2.50|   1.91|    0.00|    1.00|    2.00|    3|   50|▇▁▁▁▁ |\n|adults                         |         0|             1|    1.86|   0.58|    0.00|    2.00|    2.00|    2|   55|▇▁▁▁▁ |\n|children                       |         4|             1|    0.10|   0.40|    0.00|    0.00|    0.00|    0|   10|▇▁▁▁▁ |\n|babies                         |         0|             1|    0.01|   0.10|    0.00|    0.00|    0.00|    0|   10|▇▁▁▁▁ |\n|is_repeated_guest              |         0|             1|    0.03|   0.18|    0.00|    0.00|    0.00|    0|    1|▇▁▁▁▁ |\n|previous_cancellations         |         0|             1|    0.09|   0.84|    0.00|    0.00|    0.00|    0|   26|▇▁▁▁▁ |\n|previous_bookings_not_canceled |         0|             1|    0.14|   1.50|    0.00|    0.00|    0.00|    0|   72|▇▁▁▁▁ |\n|booking_changes                |         0|             1|    0.22|   0.65|    0.00|    0.00|    0.00|    0|   21|▇▁▁▁▁ |\n|days_in_waiting_list           |         0|             1|    2.32|  17.59|    0.00|    0.00|    0.00|    0|  391|▇▁▁▁▁ |\n|adr                            |         0|             1|  101.83|  50.54|   -6.38|   69.29|   94.58|  126| 5400|▇▁▁▁▁ |\n|required_car_parking_spaces    |         0|             1|    0.06|   0.25|    0.00|    0.00|    0.00|    0|    8|▇▁▁▁▁ |\n|total_of_special_requests      |         0|             1|    0.57|   0.79|    0.00|    0.00|    0.00|    1|    5|▇▁▁▁▁ |\n:::\n:::\n\nThis dataset has 32 variables and 119390 cases. There are 14 columns of character type, 1 of date type ('reservation_status_date'), and 18 of numeric type. Only the 'children' column has missing values (4).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistinct(hotelbookings,arrival_date_year) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n  arrival_date_year\n              <dbl>\n1              2015\n2              2016\n3              2017\n```\n:::\n\n```{.r .cell-code}\ndistinct(hotelbookings,is_canceled)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 1\n  is_canceled\n        <dbl>\n1           0\n2           1\n```\n:::\n:::\n\n\nFrom the variable names, this dataset seems to be logging the data of a hotel's bookings for the years 2015-2017, such as their customers' arrival date, reservation status, and the number of adults/children/babies checking in. The variable 'is_canceled' has binary values and indicates whether a booking has been canceled (0) or not (1).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistinct(hotelbookings,reservation_status)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n  reservation_status\n  <chr>             \n1 Check-Out         \n2 Canceled          \n3 No-Show           \n```\n:::\n\n```{.r .cell-code}\ndistinct(hotelbookings,hotel) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 1\n  hotel       \n  <chr>       \n1 Resort Hotel\n2 City Hotel  \n```\n:::\n\n```{.r .cell-code}\nhotelbookings %>%\n  group_by(hotel) %>%\n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  hotel            n\n  <chr>        <int>\n1 City Hotel   79330\n2 Resort Hotel 40060\n```\n:::\n:::\n\n\nThe 'reservation_status' variable has three values: 'Check-Out', 'Canceled', and 'No-Show'. There are two types of hotels from which data are collected: 'Resort Hotel' and 'City Hotel'. 79330 of the rows contain data related to the City Hotel, while 40060 rows are related to the Resort Hotel.\n\n## Provide Grouped Summary Statistics\n\nThe following command returns central tendency and dispersion values for the numeric values in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(hotelbookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    hotel            is_canceled       lead_time   arrival_date_year\n Length:119390      Min.   :0.0000   Min.   :  0   Min.   :2015     \n Class :character   1st Qu.:0.0000   1st Qu.: 18   1st Qu.:2016     \n Mode  :character   Median :0.0000   Median : 69   Median :2016     \n                    Mean   :0.3704   Mean   :104   Mean   :2016     \n                    3rd Qu.:1.0000   3rd Qu.:160   3rd Qu.:2017     \n                    Max.   :1.0000   Max.   :737   Max.   :2017     \n                                                                    \n arrival_date_month arrival_date_week_number arrival_date_day_of_month\n Length:119390      Min.   : 1.00            Min.   : 1.0             \n Class :character   1st Qu.:16.00            1st Qu.: 8.0             \n Mode  :character   Median :28.00            Median :16.0             \n                    Mean   :27.17            Mean   :15.8             \n                    3rd Qu.:38.00            3rd Qu.:23.0             \n                    Max.   :53.00            Max.   :31.0             \n                                                                      \n stays_in_weekend_nights stays_in_week_nights     adults      \n Min.   : 0.0000         Min.   : 0.0         Min.   : 0.000  \n 1st Qu.: 0.0000         1st Qu.: 1.0         1st Qu.: 2.000  \n Median : 1.0000         Median : 2.0         Median : 2.000  \n Mean   : 0.9276         Mean   : 2.5         Mean   : 1.856  \n 3rd Qu.: 2.0000         3rd Qu.: 3.0         3rd Qu.: 2.000  \n Max.   :19.0000         Max.   :50.0         Max.   :55.000  \n                                                              \n    children           babies              meal             country         \n Min.   : 0.0000   Min.   : 0.000000   Length:119390      Length:119390     \n 1st Qu.: 0.0000   1st Qu.: 0.000000   Class :character   Class :character  \n Median : 0.0000   Median : 0.000000   Mode  :character   Mode  :character  \n Mean   : 0.1039   Mean   : 0.007949                                        \n 3rd Qu.: 0.0000   3rd Qu.: 0.000000                                        \n Max.   :10.0000   Max.   :10.000000                                        \n NA's   :4                                                                  \n market_segment     distribution_channel is_repeated_guest\n Length:119390      Length:119390        Min.   :0.00000  \n Class :character   Class :character     1st Qu.:0.00000  \n Mode  :character   Mode  :character     Median :0.00000  \n                                         Mean   :0.03191  \n                                         3rd Qu.:0.00000  \n                                         Max.   :1.00000  \n                                                          \n previous_cancellations previous_bookings_not_canceled reserved_room_type\n Min.   : 0.00000       Min.   : 0.0000                Length:119390     \n 1st Qu.: 0.00000       1st Qu.: 0.0000                Class :character  \n Median : 0.00000       Median : 0.0000                Mode  :character  \n Mean   : 0.08712       Mean   : 0.1371                                  \n 3rd Qu.: 0.00000       3rd Qu.: 0.0000                                  \n Max.   :26.00000       Max.   :72.0000                                  \n                                                                         \n assigned_room_type booking_changes   deposit_type          agent          \n Length:119390      Min.   : 0.0000   Length:119390      Length:119390     \n Class :character   1st Qu.: 0.0000   Class :character   Class :character  \n Mode  :character   Median : 0.0000   Mode  :character   Mode  :character  \n                    Mean   : 0.2211                                        \n                    3rd Qu.: 0.0000                                        \n                    Max.   :21.0000                                        \n                                                                           \n   company          days_in_waiting_list customer_type           adr         \n Length:119390      Min.   :  0.000      Length:119390      Min.   :  -6.38  \n Class :character   1st Qu.:  0.000      Class :character   1st Qu.:  69.29  \n Mode  :character   Median :  0.000      Mode  :character   Median :  94.58  \n                    Mean   :  2.321                         Mean   : 101.83  \n                    3rd Qu.:  0.000                         3rd Qu.: 126.00  \n                    Max.   :391.000                         Max.   :5400.00  \n                                                                             \n required_car_parking_spaces total_of_special_requests reservation_status\n Min.   :0.00000             Min.   :0.0000            Length:119390     \n 1st Qu.:0.00000             1st Qu.:0.0000            Class :character  \n Median :0.00000             Median :0.0000            Mode  :character  \n Mean   :0.06252             Mean   :0.5714                              \n 3rd Qu.:0.00000             3rd Qu.:1.0000                              \n Max.   :8.00000             Max.   :5.0000                              \n                                                                         \n reservation_status_date\n Min.   :2014-10-17     \n 1st Qu.:2016-02-01     \n Median :2016-08-07     \n Mean   :2016-07-30     \n 3rd Qu.:2017-02-08     \n Max.   :2017-09-14     \n                        \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculating the number of cancellations and number of repeat guests grouped by hotel\nhotel_stats<-hotelbookings %>%\n  select(hotel,is_canceled,is_repeated_guest) %>%\n  group_by(hotel)%>%\n  summarize(cancellations = sum(is_canceled),guests_repeated = sum(is_repeated_guest))\n\nhotelbookings$room_assignment = (ifelse(hotelbookings$reserved_room_type==hotelbookings$assigned_room_type, 'Same', 'Different'))\n\nrooms <- hotelbookings %>%\n  select(hotel,room_assignment) %>%\n  group_by(hotel,room_assignment) %>%\n  tally()\n```\n:::\n\n\nCity Hotel saw 33102 cancellations and Resort Hotel had 11122 cancellations during this time period. City Hotel also had more repeat guests (2032) than the Resort Hotel (1778). Also, I created a new column in the dataset called 'room_assignment' that indicates whether guests got their preferred room assignment ('Same') or not ('Different'). City Hotel guests were less likely to be assigned a room not of their preference (7192) than Resort Hotel guests (7725).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_reservations <- hotelbookings %>%\n  select(hotel,reservation_status)%>%\n  group_by(hotel, reservation_status)%>%\n  tally()\n```\n:::\n\n\nThen, I compared reservation statuses ('Canceled, 'Check-Out','No Show') across hotels. For both, the number of guests checked out were more than those that cancelled or didn't show up.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotelbookings %>% \n  select(hotel,arrival_date_year,arrival_date_month) %>% \n  group_by(hotel) %>% \n  count(arrival_date_year,arrival_date_month) %>%\n  slice(which.max(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n# Groups:   hotel [2]\n  hotel        arrival_date_year arrival_date_month     n\n  <chr>                    <dbl> <chr>              <int>\n1 City Hotel                2017 May                 4556\n2 Resort Hotel              2016 October             1984\n```\n:::\n:::\n\n\nI also wanted to look at which month-year was the busiest in terms of bookings for both hotels. The busiest month was May 2017 for City Hotel (4556), and October 2016 for Resort Hotel (1984). \n \n### Explain and Interpret\n\nI chose certain variables that would objectively indicate which hotel (City Hotel or Resort Hotel) was more successful, such as the number of cancellations and reservation status. However, City Hotel had more entries in the dataset than Resort Hotel, which could skew the results. I also wanted to compare which hotel assigned most customers their preferred room type (reserved_room_type versus assigned_room_type) which could be contributing to customer satisfaction, and found that City Hotel was better in this aspect. It would also be interesting to look at both hotels' statistics through the years (2015-2017) to check whether their businesses have improved or declined. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}