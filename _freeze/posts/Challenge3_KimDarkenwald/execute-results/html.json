{
  "hash": "d94576ecd34223c4bfe92b922b53258d",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Instructions\"\nauthor: \"Kim Darkenwald\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"08/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organicpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xlsx ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.csv üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimal_weight<-read_csv(\"_data/animal_weight.csv\",\n                        show_col_types = FALSE)\nview(animal_weight)\ndim(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  9 17\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nAs indicated in our data,for the most part, animals share similar weights around regions of the globe. However, when it comes to buffalo, cattle, and swine, there are distinct differences in weight.  Animals of these categories in particular appear to be much larger in weight in the Northern American and European regions while the regions of the Middle East, Africa, and the Indian Subcontinent contain animals of significantly less weight.  \n\nI'm not sure why or how I would pivot this.\n\n\n#\n### Example: find current and future data dimensions\n\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA    1243.    -134.\n2 USA      1990 NAFTA    1271.     666.\n3 France   1980 EU        695.    1086.\n4 Mexico   1990 NAFTA    1135.    1424.\n5 USA      1980 NAFTA    1021.    1545.\n6 France   1990 EU       1042.     900.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\nThere are 9 rows and 17 columns, therefore, n = 9 and k =17.  I do not see how I would pivot this. Is it because some of the columns have the same number of animals so you would eliminate them? \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf<-tibble(animal = rep(c(\"Cattle_Dairy\", \"Cattle_Nondairy\", \"Swine_Market\",\n                          \"Swine_Breeding\"),9))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 36 √ó 1\n   animal         \n   <chr>          \n 1 Cattle_Dairy   \n 2 Cattle_Nondairy\n 3 Swine_Market   \n 4 Swine_Breeding \n 5 Cattle_Dairy   \n 6 Cattle_Nondairy\n 7 Swine_Market   \n 8 Swine_Breeding \n 9 Cattle_Dairy   \n10 Cattle_Nondairy\n# ‚Ä¶ with 26 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 36\n```\n:::\n\n```{.r .cell-code}\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nnrow(fd) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in nrow(fd): object 'fd' not found\n```\n:::\n:::\n\n\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"No Idea\",\n                 values_to = \"Not Sure\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `chr_as_locations()`:\n! Can't subset columns that don't exist.\n‚úñ Column `outgoing` doesn't exist.\n```\n:::\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 36 √ó 1\n   animal         \n   <chr>          \n 1 Cattle_Dairy   \n 2 Cattle_Nondairy\n 3 Swine_Market   \n 4 Swine_Breeding \n 5 Cattle_Dairy   \n 6 Cattle_Nondairy\n 7 Swine_Market   \n 8 Swine_Breeding \n 9 Cattle_Dairy   \n10 Cattle_Nondairy\n# ‚Ä¶ with 26 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n:::\n\n\nAny additional comments?\n",
    "supporting": [
      "Challenge3_KimDarkenwald_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}