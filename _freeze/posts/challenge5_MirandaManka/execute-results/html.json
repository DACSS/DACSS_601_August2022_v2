{
  "hash": "f9768a4f9fcb38e9107345153c0b02fc",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Miranda Manka\"\ndescription: \"Introduction to Visualization\"\ndate: \"08/22/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - air_bnb\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nair_bnb = read_csv(\"_data/AB_NYC_2019.csv\", show_col_types = FALSE)\n```\n:::\n\n\n### Briefly describe the data\n\nThis is a dataset containing information about Airbnb listings in New York City. The variables include id and name of the listing, id and name of the host, neighborhood (including neighborhood group), latitude and longitude, room type, price, the minimum number of nights someone must book, number of reviews, last review date, reviews per month, the calculated count of host listings, and the availability (number out of 365/a year). Each row is a different listing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nair_bnb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 16\n      id name      host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n   <dbl> <chr>       <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  2539 Clean & …    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n 2  2595 Skylit M…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n 3  3647 THE VILL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n 4  3831 Cozy Ent…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n 5  5022 Entire A…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n 6  5099 Large Co…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n 7  5121 BlissArt…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…    60\n 8  5178 Large Fu…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…    79\n 9  5203 Cozy Cle…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…    79\n10  5238 Cute & C…    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…   150\n# … with 48,885 more rows, 6 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\nsummary(air_bnb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:48895       Min.   :     2438   Length:48895      \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033   Class :character  \n Median :19677284   Mode  :character   Median : 30793816   Mode  :character  \n Mean   :19017143                      Mean   : 67620011                     \n 3rd Qu.:29152178                      3rd Qu.:107434423                     \n Max.   :36487245                      Max.   :274321313                     \n                                                                             \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:48895        Length:48895       Min.   :40.50   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.96  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n                                                                        \n  room_type             price         minimum_nights    number_of_reviews\n Length:48895       Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n Class :character   1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Mode  :character   Median :  106.0   Median :   3.00   Median :  5.00   \n                    Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n                    3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n                    Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n                                                                         \n  last_review         reviews_per_month calculated_host_listings_count\n Min.   :2011-03-28   Min.   : 0.010    Min.   :  1.000               \n 1st Qu.:2018-07-08   1st Qu.: 0.190    1st Qu.:  1.000               \n Median :2019-05-19   Median : 0.720    Median :  1.000               \n Mean   :2018-10-04   Mean   : 1.373    Mean   :  7.144               \n 3rd Qu.:2019-06-23   3rd Qu.: 2.020    3rd Qu.:  2.000               \n Max.   :2019-07-08   Max.   :58.500    Max.   :327.000               \n NA's   :10052        NA's   :10052                                   \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n                 \n```\n:::\n:::\n\n\n## Tidy Data\n\nI decided to take a few steps to tidy the data. First, I replaced the NAs in the reviews_per_month column because I could see in the number_of_reviews column there were some rows that had 0 (since you can't divide 0 by a number of you get NA). I also removed some columns I knew I wouldn't use for this analysis (id, name, host_id, host_name, latitude, and longitude). I thought about maybe dropping listings that had 0 availability_365 but I didn't because I wasn't sure if 0 meant the listing was inactive or fully booked.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nair_bnb = air_bnb %>% \n  mutate(reviews_per_month = replace_na(reviews_per_month, 0))\n\nair_bnb = air_bnb %>% \n  select(-c(\"id\", \"name\", \"host_id\", \"host_name\", \"latitude\", \"longitude\"))\n```\n:::\n\n\n## Univariate Visualizations\n\nThe first variable I wanted to look at is room_type, because I thought it would be really interesting and could give some insight into the dataset as a whole. I chose a bar graph for room_type because it is a discrete variable and I think a bar graph makes it easy to visualize. The graph shows that entire home/apt is the most common room type (25409 listings), private room is close behind with the second most listings (22326 listings), while there are very few listings with a shared room (1160 listings).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = room_type)) + \n  geom_bar(fill = \"lightgrey\") + \n  geom_text(aes(label = ..count..), stat = \"count\", size = 3, vjust = 1, \n     color = \"black\") +\n  labs(title = \"Room Type for Airbnb Listings\", x = \"Room Type\", y = \"Frequency\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_MirandaManka_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nI also wanted to examine neighbourhood_group because it provides a good idea of how many listings are in each area. I also chose a bar graph for neighbourhood_group because it is a discrete variable. The graph shows that there are many listings in Manhattan (21661 listings) and Brooklyn (20104 listings), much less in Queens (5666), and few in Bronx (1091 listings) and Staten Island (373 listings).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = neighbourhood_group)) + \n  geom_bar(fill = \"lightgrey\") + \n  geom_text(aes(label = ..count..), stat = \"count\", size = 3, vjust = 1, \n     color = \"black\") +\n  labs(title = \"Neighborhood Group for Airbnb Listings\", x = \"Neighborhood Group\", \n     y = \"Frequency\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_MirandaManka_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe next variable I wanted to look at is number_of_reviews. Since it is a continuous variable, I used a histogram. The histogram shows that many listings have few reviews, and as the number of reviews increases the frequency decreases.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = number_of_reviews)) + \n  geom_histogram(fill = \"lightgrey\") + \n  xlim(0, 100) + \n  labs(title = \"Number of Reviews for Airbnb Listings\", \n     x = \"Number of Reviews\", y = \"Frequency\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_MirandaManka_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nFor the final univariate visualization, I looked at last_review. This variable contains the date that the last review for the listing was given. I chose a density plot because it is a continuous variable and it looks smoother than a histogram. The plot shows that most of the listings had recent reviews (as of 2019), but a few had their last review in 2016 (these may be listings no longer active).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = last_review)) +\n  geom_density(fill = \"lightgrey\") + \n  labs(title = \"Last Review Date for Airbnb Listings\", x = \"Date of Last Review\", \n     y = \"Density\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_MirandaManka_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Visualization\n\nThis visualization is a histogram of price (continuous) with room_type (discrete) as the fill. I chose this combination because I thought it showed these variables well together and gave some interesting insights. As expected, the shared rooms generally cost the least, while private rooms go for slightly more than shared rooms (however they have a fairly large range and some go for more), and the entire home/apt listings generally cost the most (but also have a wide range of prices).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = price, fill = room_type)) + \n  geom_histogram(bins = 25) + \n  xlim(0, 600) + \n  labs(title = \"Airbnb Price and Room Type\", x = \"Price\", y = \"Frequency\", \n     fill = guide_legend(\"Room Type\")) + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_MirandaManka_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge5_MirandaManka_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}