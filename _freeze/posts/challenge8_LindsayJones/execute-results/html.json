{
  "hash": "f606e6a7012e4175ef143438f291955a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Lindsay Jones\"\ndescription: \"Joining Data\"\ndate: \"08/25/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - snl\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nseasons <- read_csv(\"_data/snl_seasons.csv\", show_col_types = FALSE)\n\ncasts <- read_csv(\"_data/snl_casts.csv\", show_col_types = FALSE)\n\nactors <- read_csv(\"_data/snl_actors.csv\", show_col_types = FALSE)\n```\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\n\"Seasons\" and \"Casts\" both use the column title \"n_episodes\", but they mean different things- the former refers to number of episodes aired in the season, the latter refers to the number of episodes a cast member appeared in during the season. Similarly, they both use \"first_epid\" and \"last_epid\". I will rename the columns accordingly. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#rename columns\nseasons <- rename(seasons, \"n_eps_aired\" = \"n_episodes\")\n\ncasts <- rename(casts, \"n_eps_seen\" = \"n_episodes\",\n                      \"first_seen\" = \"first_epid\",\n                      \"last_seen\" = \"last_epid\")\n```\n:::\n\n\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#mutate season dates for readability\nseasons %>%\n  mutate(first_epid = ymd(first_epid), last_epid = ymd(last_epid))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46 × 5\n     sid  year first_epid last_epid  n_eps_aired\n   <dbl> <dbl> <date>     <date>           <dbl>\n 1     1  1975 1975-10-11 1976-07-31          24\n 2     2  1976 1976-09-18 1977-05-21          22\n 3     3  1977 1977-09-24 1978-05-20          20\n 4     4  1978 1978-10-07 1979-05-26          20\n 5     5  1979 1979-10-13 1980-05-24          20\n 6     6  1980 1980-11-15 1981-04-11          13\n 7     7  1981 1981-10-03 1982-05-22          20\n 8     8  1982 1982-09-25 1983-05-14          20\n 9     9  1983 1983-10-08 1984-05-12          19\n10    10  1984 1984-10-06 1985-04-13          17\n# … with 36 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\ncasts %>%\n  mutate(first_seen = ymd(first_seen), last_seen = ymd(last_seen))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 8\n   aid                sid featured first_seen last_seen update…¹ n_eps…² seaso…³\n   <chr>            <dbl> <lgl>    <date>     <date>    <lgl>      <dbl>   <dbl>\n 1 A. Whitney Brown    11 TRUE     1986-02-22 NA        FALSE          8   0.444\n 2 A. Whitney Brown    12 TRUE     NA         NA        FALSE         20   1    \n 3 A. Whitney Brown    13 TRUE     NA         NA        FALSE         13   1    \n 4 A. Whitney Brown    14 TRUE     NA         NA        FALSE         20   1    \n 5 A. Whitney Brown    15 TRUE     NA         NA        FALSE         20   1    \n 6 A. Whitney Brown    16 TRUE     NA         NA        FALSE         20   1    \n 7 Alan Zweibel         5 TRUE     1980-04-09 NA        FALSE          5   0.25 \n 8 Sasheer Zamata      39 TRUE     2014-01-18 NA        FALSE         11   0.524\n 9 Sasheer Zamata      40 TRUE     NA         NA        FALSE         21   1    \n10 Sasheer Zamata      41 FALSE    NA         NA        FALSE         21   1    \n# … with 604 more rows, and abbreviated variable names ¹​update_anchor,\n#   ²​n_eps_seen, ³​season_fraction\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\n## Join Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl <- inner_join(seasons, casts, \"sid\")\nsnl <- inner_join(snl, actors, \"aid\")\nsnl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 15\n     sid  year first_epid last_e…¹ n_eps…² aid   featu…³ first…⁴ last_…⁵ updat…⁶\n   <dbl> <dbl>      <dbl>    <dbl>   <dbl> <chr> <lgl>     <dbl>   <dbl> <lgl>  \n 1     1  1975   19751011 19760731      24 Gild… FALSE        NA NA      FALSE  \n 2     1  1975   19751011 19760731      24 Mich… FALSE        NA  1.98e7 FALSE  \n 3     1  1975   19751011 19760731      24 Lara… FALSE        NA NA      FALSE  \n 4     1  1975   19751011 19760731      24 Garr… FALSE        NA NA      FALSE  \n 5     1  1975   19751011 19760731      24 Jane… FALSE        NA NA      FALSE  \n 6     1  1975   19751011 19760731      24 Geor… FALSE        NA  1.98e7 FALSE  \n 7     1  1975   19751011 19760731      24 Chev… FALSE        NA NA      TRUE   \n 8     1  1975   19751011 19760731      24 John… FALSE        NA NA      FALSE  \n 9     1  1975   19751011 19760731      24 Dan … FALSE        NA NA      FALSE  \n10     2  1976   19760918 19770521      22 Gild… FALSE        NA NA      FALSE  \n# … with 604 more rows, 5 more variables: n_eps_seen <dbl>,\n#   season_fraction <dbl>, url <chr>, type <chr>, gender <chr>, and abbreviated\n#   variable names ¹​last_epid, ²​n_eps_aired, ³​featured, ⁴​first_seen,\n#   ⁵​last_seen, ⁶​update_anchor\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\nApparently the mutating of dates doesn't carry over to the join, so I'll do that again.\n\n::: {.cell}\n\n```{.r .cell-code}\n#remove year column\nsnl <- snl%>%\n  select(-year)\n\n#mutate season dates for readability\nsnl %>%\n  mutate(first_epid = ymd(first_epid), \n         last_epid = ymd(last_epid),\n         first_seen = ymd(first_seen), \n         last_seen = ymd(last_seen))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 14\n     sid first_epid last_epid  n_eps_aired aid     featu…¹ first_seen last_seen \n   <dbl> <date>     <date>           <dbl> <chr>   <lgl>   <date>     <date>    \n 1     1 1975-10-11 1976-07-31          24 Gilda … FALSE   NA         NA        \n 2     1 1975-10-11 1976-07-31          24 Michae… FALSE   NA         1975-11-08\n 3     1 1975-10-11 1976-07-31          24 Larain… FALSE   NA         NA        \n 4     1 1975-10-11 1976-07-31          24 Garret… FALSE   NA         NA        \n 5     1 1975-10-11 1976-07-31          24 Jane C… FALSE   NA         NA        \n 6     1 1975-10-11 1976-07-31          24 George… FALSE   NA         1975-10-11\n 7     1 1975-10-11 1976-07-31          24 Chevy … FALSE   NA         NA        \n 8     1 1975-10-11 1976-07-31          24 John B… FALSE   NA         NA        \n 9     1 1975-10-11 1976-07-31          24 Dan Ay… FALSE   NA         NA        \n10     2 1976-09-18 1977-05-21          22 Gilda … FALSE   NA         NA        \n# … with 604 more rows, 6 more variables: update_anchor <lgl>,\n#   n_eps_seen <dbl>, season_fraction <dbl>, url <chr>, type <chr>,\n#   gender <chr>, and abbreviated variable name ¹​featured\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}