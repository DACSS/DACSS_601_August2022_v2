{
  "hash": "dc46bd377719831e94eba576e9503706",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\nauthor: \"Lai Wei \"\ndesription: \"Reading in data and creating a post\"\ndate: \"08/22 /2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xlsx ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nFAOstat <- read_csv(\"_data/FAOSTAT_country_groups.csv\")\nFAOstat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,943 × 7\n   `Country Group Code` `Country Group` Countr…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                  <dbl> <chr>              <dbl> <chr>   <chr>   <chr>   <chr>  \n 1                 5100 Africa                 4 Algeria 012     DZ      DZA    \n 2                 5100 Africa                 7 Angola  024     AO      AGO    \n 3                 5100 Africa                53 Benin   204     BJ      BEN    \n 4                 5100 Africa                20 Botswa… 072     BW      BWA    \n 5                 5100 Africa               233 Burkin… 854     BF      BFA    \n 6                 5100 Africa                29 Burundi 108     BI      BDI    \n 7                 5100 Africa                35 Cabo V… 132     CV      CPV    \n 8                 5100 Africa                32 Camero… 120     CM      CMR    \n 9                 5100 Africa                37 Centra… 140     CF      CAF    \n10                 5100 Africa                39 Chad    148     TD      TCD    \n# … with 1,933 more rows, and abbreviated variable names ¹​`Country Code`,\n#   ²​`M49 Code`, ³​`ISO2 Code`, ⁴​`ISO3 Code`\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas_tibble(FAOstat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,943 × 7\n   `Country Group Code` `Country Group` Countr…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                  <dbl> <chr>              <dbl> <chr>   <chr>   <chr>   <chr>  \n 1                 5100 Africa                 4 Algeria 012     DZ      DZA    \n 2                 5100 Africa                 7 Angola  024     AO      AGO    \n 3                 5100 Africa                53 Benin   204     BJ      BEN    \n 4                 5100 Africa                20 Botswa… 072     BW      BWA    \n 5                 5100 Africa               233 Burkin… 854     BF      BFA    \n 6                 5100 Africa                29 Burundi 108     BI      BDI    \n 7                 5100 Africa                35 Cabo V… 132     CV      CPV    \n 8                 5100 Africa                32 Camero… 120     CM      CMR    \n 9                 5100 Africa                37 Centra… 140     CF      CAF    \n10                 5100 Africa                39 Chad    148     TD      TCD    \n# … with 1,933 more rows, and abbreviated variable names ¹​`Country Code`,\n#   ²​`M49 Code`, ³​`ISO2 Code`, ⁴​`ISO3 Code`\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\n#display the 5th row\nFAOstat[5,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 7\n  `Country Group Code` `Country Group` Country…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                 <dbl> <chr>               <dbl> <chr>   <chr>   <chr>   <chr>  \n1                 5100 Africa                233 Burkin… 854     BF      BFA    \n# … with abbreviated variable names ¹​`Country Code`, ²​`M49 Code`, ³​`ISO2 Code`,\n#   ⁴​`ISO3 Code`\n```\n:::\n\n```{.r .cell-code}\n#preview the first six rows of data\nhead(FAOstat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  `Country Group Code` `Country Group` Country…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                 <dbl> <chr>               <dbl> <chr>   <chr>   <chr>   <chr>  \n1                 5100 Africa                  4 Algeria 012     DZ      DZA    \n2                 5100 Africa                  7 Angola  024     AO      AGO    \n3                 5100 Africa                 53 Benin   204     BJ      BEN    \n4                 5100 Africa                 20 Botswa… 072     BW      BWA    \n5                 5100 Africa                233 Burkin… 854     BF      BFA    \n6                 5100 Africa                 29 Burundi 108     BI      BDI    \n# … with abbreviated variable names ¹​`Country Code`, ²​`M49 Code`, ³​`ISO2 Code`,\n#   ⁴​`ISO3 Code`\n```\n:::\n\n```{.r .cell-code}\n#get the dimension of FAOstat-country\ndim(FAOstat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1943    7\n```\n:::\n\n```{.r .cell-code}\n#get the col names of FAOstat-country\ncolnames(FAOstat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Country Group Code\" \"Country Group\"      \"Country Code\"      \n[4] \"Country\"            \"M49 Code\"           \"ISO2 Code\"         \n[7] \"ISO3 Code\"         \n```\n:::\n\n```{.r .cell-code}\n#Select Country name out of FAOstat\nselect(FAOstat,\"Country\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,943 × 1\n   Country                 \n   <chr>                   \n 1 Algeria                 \n 2 Angola                  \n 3 Benin                   \n 4 Botswana                \n 5 Burkina Faso            \n 6 Burundi                 \n 7 Cabo Verde              \n 8 Cameroon                \n 9 Central African Republic\n10 Chad                    \n# … with 1,933 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}