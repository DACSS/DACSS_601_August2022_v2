{
  "hash": "4b970312b9aacaddd5a3268afd0cb1f8",
  "result": {
    "markdown": "---\ntitle: \"Final Project - Indian Stock Market Analysis \"\nauthor: \"Adithya Parupudi\"\ndesription: \"Analysing NIFTY50 Stocks between 2000-2021\"\ndate: \"08/02/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - tidyverse\n  - final_project\n  - Adithya\n  - dataset\n  - ggplot2\n---\n\n\n## Load Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Introduction\n\n## Read Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read all the CSV files at once\nall_stocks <- dir(\"_data/NIFTY_AdithyaParupudi/\", full.names = TRUE) %>%  map_dfr(read_csv)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3322 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3202 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3201 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5235 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4774 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5305 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2598 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5301 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5300 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3994 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4184 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4427 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2806 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4088 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3359 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4139 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3635 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4140 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4287 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5305 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nall_stocks\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 235,192 × 15\n   Date       Symbol   Series Prev …¹  Open  High   Low  Last Close  VWAP Volume\n   <date>     <chr>    <chr>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n 1 2007-11-27 MUNDRAP… EQ        440   770  1050   770   959   963.  985. 2.73e7\n 2 2007-11-28 MUNDRAP… EQ        963.  984   990   874   885   894.  941. 4.58e6\n 3 2007-11-29 MUNDRAP… EQ        894.  909   915.  841   887   884.  888. 5.12e6\n 4 2007-11-30 MUNDRAP… EQ        884.  890   958   890   929   922.  929. 4.61e6\n 5 2007-12-03 MUNDRAP… EQ        922.  940.  995   922   980   969.  966. 2.98e6\n 6 2007-12-04 MUNDRAP… EQ        969.  985  1056   976  1049  1041. 1015. 4.85e6\n 7 2007-12-05 MUNDRAP… EQ       1041. 1061  1100. 1050  1084  1082. 1083. 2.85e6\n 8 2007-12-06 MUNDRAP… EQ       1082. 1089  1110. 1051  1090. 1081. 1087. 1.75e6\n 9 2007-12-07 MUNDRAP… EQ       1081. 1100  1134  1078  1100  1102. 1107. 2.25e6\n10 2007-12-10 MUNDRAP… EQ       1102. 1110  1110  1061. 1074. 1075. 1080. 1.01e6\n# … with 235,182 more rows, 4 more variables: Turnover <dbl>, Trades <dbl>,\n#   `Deliverable Volume` <dbl>, `%Deliverble` <dbl>, and abbreviated variable\n#   name ¹​`Prev Close`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(all_stocks)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 235192     15\n```\n:::\n\n```{.r .cell-code}\ncolnames(all_stocks)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Date\"               \"Symbol\"             \"Series\"            \n [4] \"Prev Close\"         \"Open\"               \"High\"              \n [7] \"Low\"                \"Last\"               \"Close\"             \n[10] \"VWAP\"               \"Volume\"             \"Turnover\"          \n[13] \"Trades\"             \"Deliverable Volume\" \"%Deliverble\"       \n```\n:::\n:::\n\n\nLooks like the last column has a spelling mistake. I am correcting it to prevent further confusion. \\`%Deliverble\\` changed to Percent_Deliverable\n\n## Data Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_stocks <- all_stocks %>% rename(Percent_Deliverable = `%Deliverble`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# separating year from the Date column\n\n# all_stocks %>% select(Date) %>% year()\n\nx<-format(as.Date(all_stocks$Date, format=\"%Y/%m/%d\"))\n\nall_stocks_yy <- all_stocks %>% \n  mutate(yy=year(x)) %>%\n  select(-Date)\nprint(all_stocks_yy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 235,192 × 15\n   Symbol     Series Prev C…¹  Open  High   Low  Last Close  VWAP Volume Turno…²\n   <chr>      <chr>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>   <dbl>\n 1 MUNDRAPORT EQ         440   770  1050   770   959   963.  985. 2.73e7 2.69e15\n 2 MUNDRAPORT EQ         963.  984   990   874   885   894.  941. 4.58e6 4.31e14\n 3 MUNDRAPORT EQ         894.  909   915.  841   887   884.  888. 5.12e6 4.55e14\n 4 MUNDRAPORT EQ         884.  890   958   890   929   922.  929. 4.61e6 4.28e14\n 5 MUNDRAPORT EQ         922.  940.  995   922   980   969.  966. 2.98e6 2.88e14\n 6 MUNDRAPORT EQ         969.  985  1056   976  1049  1041. 1015. 4.85e6 4.92e14\n 7 MUNDRAPORT EQ        1041. 1061  1100. 1050  1084  1082. 1083. 2.85e6 3.08e14\n 8 MUNDRAPORT EQ        1082. 1089  1110. 1051  1090. 1081. 1087. 1.75e6 1.90e14\n 9 MUNDRAPORT EQ        1081. 1100  1134  1078  1100  1102. 1107. 2.25e6 2.49e14\n10 MUNDRAPORT EQ        1102. 1110  1110  1061. 1074. 1075. 1080. 1.01e6 1.09e14\n# … with 235,182 more rows, 4 more variables: Trades <dbl>,\n#   `Deliverable Volume` <dbl>, Percent_Deliverable <dbl>, yy <dbl>, and\n#   abbreviated variable names ¹​`Prev Close`, ²​Turnover\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\nall_stocks_yy %>% select(1) %>% distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 65 × 1\n   Symbol    \n   <chr>     \n 1 MUNDRAPORT\n 2 ADANIPORTS\n 3 ASIANPAINT\n 4 UTIBANK   \n 5 AXISBANK  \n 6 BAJAJ-AUTO\n 7 BAJAJFINSV\n 8 BAJAUTOFIN\n 9 BAJFINANCE\n10 BHARTI    \n# … with 55 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nReading-in the data of wipro stock from the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist.files(path = \"/_data/NIFTY_3/\", pattern = \"*.csv\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncharacter(0)\n```\n:::\n\n```{.r .cell-code}\n# %>% map_df(~read_csv(.))\n```\n:::\n\n\nColumn description which is not obvious:\n\n1.  VWAP : volume-weighted average price - It's a trading benchmark that represents the average price a security has traded at throughout the day, based on both volume and price\n2.  Series column has EQ values - refers to equity\n3.  Turnover : Stock turnover rate is considered to be **a measure of sales performance**; usually the higher the stock turnover rate, the better your stock/business is performing. The lower the rate, the longer the stock is taking to turn over.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(wipro)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'wipro' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwipro <- read_csv(\"_data/NIFTY_AdithyaParupudi/WIPRO.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nwipro\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,306 × 15\n   Date       Symbol Series Prev Cl…¹  Open  High   Low  Last Close  VWAP Volume\n   <date>     <chr>  <chr>      <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n 1 2000-01-03 WIPRO  EQ         2522. 2724  2724. 2724  2724. 2724. 2724.   1599\n 2 2000-01-04 WIPRO  EQ         2724. 2942. 2942. 2942. 2942. 2942. 2942.   4392\n 3 2000-01-05 WIPRO  EQ         2942. 2942. 3178. 2715  3000  2990. 3064. 132297\n 4 2000-01-06 WIPRO  EQ         2990. 3145. 3183  2790  2915  2932. 2962.  72840\n 5 2000-01-07 WIPRO  EQ         2932. 2751  2751  2698. 2698. 2698. 2698.  10110\n 6 2000-01-10 WIPRO  EQ         2698. 2698. 2914. 2612  2665  2701. 2741.  40382\n 7 2000-01-11 WIPRO  EQ         2701. 2734  2789  2485. 2485. 2485. 2543.  46178\n 8 2000-01-12 WIPRO  EQ         2485. 2590  2608  2485  2570  2563. 2544.  20037\n 9 2000-01-13 WIPRO  EQ         2563. 2574  2620  2460  2485. 2480. 2540.  19080\n10 2000-01-14 WIPRO  EQ         2480. 2590  2590  2405  2475. 2498. 2470.  20412\n# … with 5,296 more rows, 4 more variables: Turnover <dbl>, Trades <dbl>,\n#   `Deliverable Volume` <dbl>, `%Deliverble` <dbl>, and abbreviated variable\n#   name ¹​`Prev Close`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\n\nThere are no comments in this dataset, so saves time for cleaning to an extent\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntail(wipro)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 15\n  Date       Symbol Series Prev Clo…¹  Open  High   Low  Last Close  VWAP Volume\n  <date>     <chr>  <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n1 2021-04-23 WIPRO  EQ           487.  484.  487.  474.  475.  476.  481. 1.36e7\n2 2021-04-26 WIPRO  EQ           476.  479.  484.  477   482   480.  480. 9.31e6\n3 2021-04-27 WIPRO  EQ           480.  481.  487   481   484.  485.  484. 7.21e6\n4 2021-04-28 WIPRO  EQ           485.  486.  493.  481.  489.  489.  488. 9.62e6\n5 2021-04-29 WIPRO  EQ           489.  493.  493.  486.  489   490.  489. 7.64e6\n6 2021-04-30 WIPRO  EQ           490.  492.  512.  489.  492.  493.  501. 2.91e7\n# … with 4 more variables: Turnover <dbl>, Trades <dbl>,\n#   `Deliverable Volume` <dbl>, `%Deliverble` <dbl>, and abbreviated variable\n#   name ¹​`Prev Close`\n# ℹ Use `colnames()` to see all variable names\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summarytools::dfSummary(all_stocks_yy,\n                        varnumbers = FALSE,\n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.70, \n                        valid.col    = FALSE),\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>all_stocks_yy</h4>\n<strong>Dimensions</strong>: 235192 x 15\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"left\">Symbol\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. ASIANPAINT</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. BPCL</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. CIPLA</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. DRREDDY</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. GRASIM</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. HDFC</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. HDFCBANK</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. ICICIBANK</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. IOC</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. ITC</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 55 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">182132</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">77.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAF4AAAC8BAMAAAADcATUAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywMkIvFWwAAAHFJREFUaN7t17EJgDAUBNCs4AjqBrr/bmm0s7goQkLe1a8J3PFJKeNnW5csl995/oNv7VuoX3v953v29sLzuf97L/rP9+zdC57Pvb3wM3v95/nc2wvP595/nJ/Zuxc8n/vu9pLmfu+Z5eD5B9/at5FTAYmpQ8VSSfKuAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjEyKzAwOjAw7ETJEgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxMiswMDowMJ0Zca4AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Series\n[character]</td>\n      <td align=\"left\">1. EQ</td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">235192</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">100.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAHUAAAAXCAQAAACfMchmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QA/4ePzL8AAAAHdElNRQfmCQEXLAyQi8VbAAAAYElEQVRYw+3XQQoAEBCF4Rk5nRs4oRvM9diibFDy5n272chfFFrFi/B6A0xl6onYDwXu4mZdpIqk13u7yobJ0QFmKiKmImIqIqYiYioiR6nTc9/2VvmCwv3blhwdYKYiapF5Becy9uLlAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjEyKzAwOjAw7ETJEgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxMiswMDowMJ0Zca4AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Prev Close\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1266.2 (2581.4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 566.5 &le; 32861.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 967.9 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">63729 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywN54z1zQAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDFUMjM6NDQ6MTMrMDA6MDBKM8KmAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAxVDIzOjQ0OjEzKzAwOjAwO256GgAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Open\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1267.8 (2585.3)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8.5 &le; 567 &le; 33399.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968.3 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">44298 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywN54z1zQAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDFUMjM6NDQ6MTMrMDA6MDBKM8KmAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAxVDIzOjQ0OjEzKzAwOjAwO256GgAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">High\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1286.6 (2619.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.8 &le; 576.9 &le; 33480</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 983.5 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">49036 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywN54z1zQAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDFUMjM6NDQ6MTMrMDA6MDBKM8KmAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAxVDIzOjQ0OjEzKzAwOjAwO256GgAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Low\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1247.5 (2546.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8.5 &le; 556.5 &le; 32468.1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 952.1 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">51335 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywOfoWkdwAAAEpJREFUWMPt17ENACAIRFFG0A0MbiD772ajiSUXO/J//0JxFWb1c/eu1I6bsXA4HA6Hw+FwOBwO9+ekl+xxoZzEZVx+iutcbFj9Ng1ABFUO+GRBAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjE0KzAwOjAwj5T8KAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxNCswMDowMP7JRJQAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Last\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1266.4 (2581.4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.1 &le; 567 &le; 32849</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968.5 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">48570 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywOfoWkdwAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDFUMjM6NDQ6MTQrMDA6MDCPlPwoAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAxVDIzOjQ0OjE0KzAwOjAw/slElAAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Close\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1266.6 (2582.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.2 &le; 566.7 &le; 32861.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968.1 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">63739 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywPCYKU4QAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDFUMjM6NDQ6MTUrMDA6MDAp4/ecAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAxVDIzOjQ0OjE1KzAwOjAwWL5PIAAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">VWAP\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1267.1 (2582.7)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.2 &le; 566.9 &le; 32975.2</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">138831 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywPCYKU4QAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDFUMjM6NDQ6MTUrMDA6MDAp4/ecAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAxVDIzOjQ0OjE1KzAwOjAwWL5PIAAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Volume\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3045903 (7333981)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3 &le; 1010939 &le; 481058927</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2800842 (2.4)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">220434 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywQhIqZFAAAADtJREFUWMPtyzEVwCAQBbCTUBzQjwT8e2OpATreS/ZU9Ze848bzvbU9z/M8z/M8z/M8r8NL/rxcmtXfAer4/JmdygO1AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjE2KzAwOjAwGAvtAQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxNiswMDowMGlWVb0AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Turnover\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1.610138e+14 (3.298085e+14)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10470000 &le; 6.832603e+13 &le; 3.564334e+16</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 1.702553e+14 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">235184 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywR842pggAAADhJREFUWMPtyzENACAMALBJAAdkOAD/3ngwsBfavxHvy8xe0e6be3me53me53me53nety+LRrzvAOLRASxE1XugAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjE3KzAwOjAwvnzmtQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxNyswMDowMM8hXgkAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Trades\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 61964.3 (68664.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">11 &le; 44068 &le; 1643015</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 57101.5 (1.1)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">79112 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywR842pggAAAE1JREFUWMPt17ENACAIBVFG0A0MbiD772ajiXbQEXLXv/yCCpH6qWqP1I6btnA4HA6Hw+FwOBwuqwu9Oo+zyCQuo/Of/nf+yes02JD6bVDRBem9S5VxAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjE3KzAwOjAwvnzmtQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxNyswMDowMM8hXgkAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">114848\n(48.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Deliverable Volume\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1315098 (2831670)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5 &le; 501756 &le; 232530747</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 1326850 (2.2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">199963 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywSaoT4OAAAAD5JREFUWMPt1zERACEMAMFIAAdPkIB/b9+AgLSZvX4FXET/MtesNK7bh+M4juM4juM4juM6uNoZP5fFvujfD/94/KlR5vtGAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjE4KzAwOjAwSDSWXAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxOCswMDowMDlpLuAAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">16077\n(6.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Percent_Deliverable\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 0.5 (0.2)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 0.5 &le; 1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0.3 (0.4)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">9456 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywSaoT4OAAAAMVJREFUWMPt1tERgyAMBmBHaJ2gjRs0++9W4IAmqC1/6lmL5MEHLt95Qkgchvbjuhoj0X2+evngiIjZ4CZ+HN+5LQnOfSTmmINzj+6+dqHEDC6Rv3JlpdW68o1bu3QVYCdIe26UpYk4Rc7h9Hipd7ptLznfICwupnW3hYsNAnc5rbtKJ39HECfHUuHyjAVdkdbdQV1uvtLJmb7icpEqt5B2OhcvIeziIe7p/OFbnN+cl1O/4YB7kzZbILqZ3MS/cgRGci3HE+o3tfopkus+AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAxVDIzOjQ0OjE4KzAwOjAwSDSWXAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wMVQyMzo0NDoxOCswMDowMDlpLuAAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">16077\n(6.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">yy\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 2010.9 (5.9)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2000 &le; 2011 &le; 2021</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 10 (0)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">22 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkBFywTHYPIrgAAAJNJREFUWMPt01EKgCAQBNCOkJ4g1xs0979baiZFUG5Egs34sYv6wLKGof+IOKPJmJ0HHd2vnY3/zpULG3KcKU2YBm4c4MOYAZFYUhNS79aSmlTed/lAancAtc7G96B29nTAGhcfa37gyoYvnC0fhtIBH7p8AXq3W6l35eKU7rhCR0dH18aJTI+cBx0dXXsnymyu5yySFgrRBjKCOwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0wOS0wMVQyMzo0NDoxOSswMDowMO5DnegAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMDktMDFUMjM6NDQ6MTkrMDA6MDCfHiVUAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.1)<br/>2022-09-01</p>\n</div>\n```\n:::\n:::\n\n\nTrades, Deliverable Volume and Deliverable% columns have a lot of NA's. The other columns are full.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(wipro)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Date\"               \"Symbol\"             \"Series\"            \n [4] \"Prev Close\"         \"Open\"               \"High\"              \n [7] \"Low\"                \"Last\"               \"Close\"             \n[10] \"VWAP\"               \"Volume\"             \"Turnover\"          \n[13] \"Trades\"             \"Deliverable Volume\" \"%Deliverble\"       \n```\n:::\n:::\n\n\nTo see on which date the highest sales were made, I picked the date and volume column and produced the result based on the grouped date column. We can see the highest number of shares ever sold was on 15 July 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwipro_year_wise<- wipro %>% \n  arrange(desc(`Volume`)) %>% \n  select(`Date`,`Volume`) %>% \n  group_by(`Date`)\n  # ungroup() %>% \n  # arrange(desc(`Date`)) %>% \n  # slice(1:10)\n\nwipro_year_wise\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,306 × 2\n# Groups:   Date [5,306]\n   Date          Volume\n   <date>         <dbl>\n 1 2020-07-15 130367693\n 2 2021-04-16 109361636\n 3 2020-10-08 107270570\n 4 2020-10-14  74138275\n 5 2021-01-14  71551807\n 6 2020-10-09  55431052\n 7 2020-10-12  52966063\n 8 2020-07-16  52277954\n 9 2021-01-11  47334018\n10 2020-12-23  44874433\n# … with 5,296 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\ntrying to visualize it in a ggplot. I will pick the top 10 results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(wipro_year_wise,20) %>%   \n  ggplot(aes(Date, Volume)) +\n  geom_point(size=2) +\n  geom_line(color='blue') +\n  labs(title='Wipro - Date vs Volume')\n```\n\n::: {.cell-output-display}\n![](FinalProject_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nChecking for the year 2000\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwipro_y2000 <- wipro_year_wise %>% \n  filter()\n```\n:::\n\n\n## Reflection\n\n## Conclusion\n\n## Bibliography\n",
    "supporting": [
      "FinalProject_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}