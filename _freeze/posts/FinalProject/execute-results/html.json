{
  "hash": "17a5a5e7c98031016b4439e8ddaffb81",
  "result": {
    "markdown": "---\ntitle: \"Final Project - Indian Stock Market Analysis \"\nauthor: \"Adithya Parupudi\"\ndesription: \"Analysing NIFTY50 Stocks between 2000-2021\"\ndate: \"08/02/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - tidyverse\n  - final_project\n  - Adithya Parupudi\n  - dataset\n  - ggplot2\n---\n\n\n## Load Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Introduction\n\nStock is also refered to as securities\n\n#### Column Descriptions\n\nDescription of columns in the file:\n\n-   Date --- Date of trade\n\n-   symbol --- Name of the company\n\n-   Series --- We have only one series - EQ, which stands for Equity.\n\n-   Prev Close --- Refers to the final price of a stock of the previous dat when the market officially closes, which is at 3:30pm IST\n\n-   Open --- The open is the starting period of trading on a securities exchange or organized over-the-counter market.\n\n-   High --- Highest price at which a stock traded during the course of the trading day.\n\n-   Low --- Lowest price at which a stock traded during the course of the trading day.\n\n-   Last --- The last price of a stock is just one price to consider when buying or selling shares. The last price is simply the most recent one\n\n-   Close --- The close is a reference to the end of a trading session in the financial markets when the markets close for the day.\n\n-   VWAP (Volume-weighted average price)- It is the ratio of the value traded to total volume traded over a particular time horizon. It is a measure of the average price at which a stock is traded over the trading horizon\n\n-   Volume --- It is the amount of a security that was traded during a given period of time\n\n-   Turnover -It is a measure of sellers versus buyers of a particular stock. It is calculated by dividing the daily volume of a stock by the \"float\" of a stock, which is the number of shares available for sale by the general trading public.\n\n-   Trades- The number of shares being traded on a given day is called trading volumes\n\n-   Deliverable Volume --- quantity of shares which actually move from one set of people (who had those shares in their demat account before today and are selling today) to another set of people (who have purchased those shares\n\n-   %Deliverable --- shares which are actually transferred from one person's to another's demat account.\n\n## Read Data\n\nThere are multiple .csv files, one for each stock, which are placed in a folder. I am reading data from all the csv files and combining them into a single data-frame using purrr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read all the CSV files at once\nall_stocks <- dir(\"_data/NIFTY_AdithyaParupudi/\", full.names = TRUE) %>%  map_dfr(read_csv, )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3322 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3202 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3201 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5235 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4774 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5305 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2598 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5301 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5300 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3994 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4184 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4427 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2806 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4088 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3359 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4985 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4139 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 3635 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4140 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 4287 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5305 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 5306 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (2): Symbol, Series\ndbl  (12): Prev Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover,...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nall_stocks <- tibble(all_stocks)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(all_stocks)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [235,192 × 15] (S3: tbl_df/tbl/data.frame)\n $ Date              : Date[1:235192], format: \"2007-11-27\" \"2007-11-28\" ...\n $ Symbol            : chr [1:235192] \"MUNDRAPORT\" \"MUNDRAPORT\" \"MUNDRAPORT\" \"MUNDRAPORT\" ...\n $ Series            : chr [1:235192] \"EQ\" \"EQ\" \"EQ\" \"EQ\" ...\n $ Prev Close        : num [1:235192] 440 963 894 884 922 ...\n $ Open              : num [1:235192] 770 984 909 890 940 ...\n $ High              : num [1:235192] 1050 990 915 958 995 ...\n $ Low               : num [1:235192] 770 874 841 890 922 ...\n $ Last              : num [1:235192] 959 885 887 929 980 ...\n $ Close             : num [1:235192] 963 894 884 922 969 ...\n $ VWAP              : num [1:235192] 985 941 888 929 966 ...\n $ Volume            : num [1:235192] 27294366 4581338 5124121 4609762 2977470 ...\n $ Turnover          : num [1:235192] 2.69e+15 4.31e+14 4.55e+14 4.28e+14 2.88e+14 ...\n $ Trades            : num [1:235192] NA NA NA NA NA NA NA NA NA NA ...\n $ Deliverable Volume: num [1:235192] 9859619 1453278 1069678 1260913 816123 ...\n $ %Deliverble       : num [1:235192] 0.361 0.317 0.209 0.274 0.274 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Date = col_date(format = \"\"),\n  ..   Symbol = col_character(),\n  ..   Series = col_character(),\n  ..   `Prev Close` = col_double(),\n  ..   Open = col_double(),\n  ..   High = col_double(),\n  ..   Low = col_double(),\n  ..   Last = col_double(),\n  ..   Close = col_double(),\n  ..   VWAP = col_double(),\n  ..   Volume = col_double(),\n  ..   Turnover = col_double(),\n  ..   Trades = col_double(),\n  ..   `Deliverable Volume` = col_double(),\n  ..   `%Deliverble` = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n\nLooks like the last column has a spelling mistake. I am correcting it to prevent further confusion. \\`%Deliverble\\` changed to Percent_Deliverable\n\n## Data Cleaning\n\n### Renaming column\n\nThe last column has a spelling mistake. Changing that to Percent_Deliverable to avoid confusion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_stocksv2 <- all_stocks %>% rename(Percent_Deliverable = `%Deliverble`)\ncolnames(all_stocksv2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Date\"                \"Symbol\"              \"Series\"             \n [4] \"Prev Close\"          \"Open\"                \"High\"               \n [7] \"Low\"                 \"Last\"                \"Close\"              \n[10] \"VWAP\"                \"Volume\"              \"Turnover\"           \n[13] \"Trades\"              \"Deliverable Volume\"  \"Percent_Deliverable\"\n```\n:::\n:::\n\n\nThe date format is yyyy/mm/dd. I only want the year aspect, so creating a new column with just that. A new column 'yy' has been created, which is the last column\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# x has all the modified values\nx<-format(as.Date(all_stocksv2$Date, format=\"%Y/%m/%d\"))\n\n# all_stocks_yy has thethe replaced date column with the new col - 'yy'\nall_stocks_yy <- all_stocksv2 %>% \n  mutate(yy=year(x)) %>%\n  select(-Date)\nprint(all_stocks_yy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 235,192 × 15\n   Symbol     Series Prev C…¹  Open  High   Low  Last Close  VWAP Volume Turno…²\n   <chr>      <chr>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>   <dbl>\n 1 MUNDRAPORT EQ         440   770  1050   770   959   963.  985. 2.73e7 2.69e15\n 2 MUNDRAPORT EQ         963.  984   990   874   885   894.  941. 4.58e6 4.31e14\n 3 MUNDRAPORT EQ         894.  909   915.  841   887   884.  888. 5.12e6 4.55e14\n 4 MUNDRAPORT EQ         884.  890   958   890   929   922.  929. 4.61e6 4.28e14\n 5 MUNDRAPORT EQ         922.  940.  995   922   980   969.  966. 2.98e6 2.88e14\n 6 MUNDRAPORT EQ         969.  985  1056   976  1049  1041. 1015. 4.85e6 4.92e14\n 7 MUNDRAPORT EQ        1041. 1061  1100. 1050  1084  1082. 1083. 2.85e6 3.08e14\n 8 MUNDRAPORT EQ        1082. 1089  1110. 1051  1090. 1081. 1087. 1.75e6 1.90e14\n 9 MUNDRAPORT EQ        1081. 1100  1134  1078  1100  1102. 1107. 2.25e6 2.49e14\n10 MUNDRAPORT EQ        1102. 1110  1110  1061. 1074. 1075. 1080. 1.01e6 1.09e14\n# … with 235,182 more rows, 4 more variables: Trades <dbl>,\n#   `Deliverable Volume` <dbl>, Percent_Deliverable <dbl>, yy <dbl>, and\n#   abbreviated variable names ¹​`Prev Close`, ²​Turnover\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\n\n### Checking missing data\n\nBy running the summary command we see that Trades, Deliverable Volume and Percent_Deliverables have a lot of missing values. Since they are all numeric, I'm replacing them with 0 to avoid calculation errors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summarytools::dfSummary(all_stocks_yy,\n                        varnumbers = FALSE,\n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.70, \n                        valid.col    = FALSE),\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>all_stocks_yy</h4>\n<strong>Dimensions</strong>: 235192 x 15\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"left\">Symbol\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. ASIANPAINT</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. BPCL</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. CIPLA</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. DRREDDY</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. GRASIM</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. HDFC</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. HDFCBANK</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. ICICIBANK</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. IOC</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. ITC</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 55 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">5306</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">182132</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">77.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAF4AAAC8BAMAAAADcATUAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUA8MMIegAAAHFJREFUaN7t17EJgDAUBNCs4AjqBrr/bmm0s7goQkLe1a8J3PFJKeNnW5csl995/oNv7VuoX3v953v29sLzuf97L/rP9+zdC57Pvb3wM3v95/nc2wvP595/nJ/Zuxc8n/vu9pLmfu+Z5eD5B9/at5FTAYmpQ8VSSfKuAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjAwKzAwOjAwLlmpQAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowMCswMDowMF8EEfwAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Series\n[character]</td>\n      <td align=\"left\">1. EQ</td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">235192</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">100.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAHUAAAAXCAQAAACfMchmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QA/4ePzL8AAAAHdElNRQfmCQMPJQDwwwh6AAAAYElEQVRYw+3XQQoAEBCF4Rk5nRs4oRvM9diibFDy5n272chfFFrFi/B6A0xl6onYDwXu4mZdpIqk13u7yobJ0QFmKiKmImIqIqYiYioiR6nTc9/2VvmCwv3blhwdYKYiapF5Becy9uLlAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjAwKzAwOjAwLlmpQAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowMCswMDowMF8EEfwAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Prev Close\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1266.2 (2581.4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 566.5 &le; 32861.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 967.9 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">63729 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUBh8Q47AAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDNUMTU6Mzc6MDErMDA6MDCILqL0AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAzVDE1OjM3OjAxKzAwOjAw+XMaSAAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Open\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1267.8 (2585.3)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8.5 &le; 567 &le; 33399.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968.3 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">44298 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUBh8Q47AAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDNUMTU6Mzc6MDErMDA6MDCILqL0AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAzVDE1OjM3OjAxKzAwOjAw+XMaSAAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">High\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1286.6 (2619.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.8 &le; 576.9 &le; 33480</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 983.5 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">49036 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUCHs1pVgAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDNUMTU6Mzc6MDIrMDA6MDC5xrhpAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAzVDE1OjM3OjAyKzAwOjAwyJsA1QAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Low\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1247.5 (2546.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8.5 &le; 556.5 &le; 32468.1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 952.1 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">51335 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUCHs1pVgAAAEpJREFUWMPt17ENACAIRFFG0A0MbiD772ajiSUXO/J//0JxFWb1c/eu1I6bsXA4HA6Hw+FwOBwO9+ekl+xxoZzEZVx+iutcbFj9Ng1ABFUO+GRBAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjAyKzAwOjAwuca4aQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowMiswMDowMMibANUAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Last\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1266.4 (2581.4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.1 &le; 567 &le; 32849</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968.5 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">48570 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUCHs1pVgAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDNUMTU6Mzc6MDIrMDA6MDC5xrhpAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAzVDE1OjM3OjAyKzAwOjAwyJsA1QAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Close\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1266.6 (2582.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.2 &le; 566.7 &le; 32861.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968.1 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">63739 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUDacpZwAAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDNUMTU6Mzc6MDMrMDA6MDAfsbPdAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAzVDE1OjM3OjAzKzAwOjAwbuwLYQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">VWAP\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1267.1 (2582.7)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9.2 &le; 566.9 &le; 32975.2</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 968 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">138831 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUDacpZwAAAAElJREFUWMPt17EJACAUA9E/gm6gcQPdfzcRLCwNdnLXP1In4v8kZae0XRsdh8PhcDgcDofD4XBvzrpkhxvOJO7GaVUdJ7MS/zcBTCUEh4CjpSAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDNUMTU6Mzc6MDMrMDA6MDAfsbPdAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTAzVDE1OjM3OjAzKzAwOjAwbuwLYQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Volume\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3045903 (7333981)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3 &le; 1010939 &le; 481058927</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2800842 (2.4)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">220434 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUE967MYwAAADtJREFUWMPtyzEVwCAQBbCTUBzQjwT8e2OpATreS/ZU9Ze848bzvbU9z/M8z/M8z/M8r8NL/rxcmtXfAer4/JmdygO1AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjA0KzAwOjAw2haNUwAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowNCswMDowMKtLNe8AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Turnover\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1.610138e+14 (3.298085e+14)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10470000 &le; 6.832603e+13 &le; 3.564334e+16</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 1.702553e+14 (2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">235184 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUFgKn89QAAADhJREFUWMPtyzENACAMALBJAAdkOAD/3ngwsBfavxHvy8xe0e6be3me53me53me53nety+LRrzvAOLRASxE1XugAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjA1KzAwOjAwfGGG5wAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowNSswMDowMA08PlsAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Trades\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 61964.3 (68664.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">11 &le; 44068 &le; 1643015</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 57101.5 (1.1)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">79112 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUFgKn89QAAAE1JREFUWMPt17ENACAIBVFG0A0MbiD772ajiXbQEXLXv/yCCpH6qWqP1I6btnA4HA6Hw+FwOBwuqwu9Oo+zyCQuo/Of/nf+yes02JD6bVDRBem9S5VxAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjA1KzAwOjAwfGGG5wAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowNSswMDowMA08PlsAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">114848\n(48.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Deliverable Volume\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1315098 (2831670)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5 &le; 501756 &le; 232530747</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 1326850 (2.2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">199963 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUGGaCtTwAAAD5JREFUWMPt1zERACEMAMFIAAdPkIB/b9+AgLSZvX4FXET/MtesNK7bh+M4juM4juM4juM6uNoZP5fFvujfD/94/KlR5vtGAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjA2KzAwOjAwTYmcegAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowNiswMDowMDzUJMYAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">16077\n(6.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Percent_Deliverable\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 0.5 (0.2)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 0.5 &le; 1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0.3 (0.4)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">9456 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUGGaCtTwAAAMVJREFUWMPt1tERgyAMBmBHaJ2gjRs0++9W4IAmqC1/6lmL5MEHLt95Qkgchvbjuhoj0X2+evngiIjZ4CZ+HN+5LQnOfSTmmINzj+6+dqHEDC6Rv3JlpdW68o1bu3QVYCdIe26UpYk4Rc7h9Hipd7ptLznfICwupnW3hYsNAnc5rbtKJ39HECfHUuHyjAVdkdbdQV1uvtLJmb7icpEqt5B2OhcvIeziIe7p/OFbnN+cl1O/4YB7kzZbILqZ3MS/cgRGci3HE+o3tfopkus+AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTA5LTAzVDE1OjM3OjA2KzAwOjAwTYmcegAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0wOS0wM1QxNTozNzowNiswMDowMDzUJMYAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">16077\n(6.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">yy\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 2010.9 (5.9)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2000 &le; 2011 &le; 2021</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 10 (0)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">22 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkDDyUHbqed2QAAAJNJREFUWMPt01EKgCAQBNCOkJ4g1xs0979baiZFUG5Egs34sYv6wLKGof+IOKPJmJ0HHd2vnY3/zpULG3KcKU2YBm4c4MOYAZFYUhNS79aSmlTed/lAancAtc7G96B29nTAGhcfa37gyoYvnC0fhtIBH7p8AXq3W6l35eKU7rhCR0dH18aJTI+cBx0dXXsnymyu5yySFgrRBjKCOwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0wOS0wM1QxNTozNzowNyswMDowMOv+l84AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMDktMDNUMTU6Mzc6MDcrMDA6MDCaoy9yAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.1)<br/>2022-09-03</p>\n</div>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#replacing NA with 0's\nall_stocks_yy[is.na(all_stocks_yy)] <- 0\n\n# counting the NA's after replacing them with 0's\nsum(is.na(all_stocks_yy$Trades))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\n## Observations\n\n### Distinct stocks\n\nNIFTY50 is supposed to be the top 50 stocks of the financial year(there must be 50 distinct stocks in the data set). This data from 2000 to 2021 is not consistent, i.e., there are 65 distinct entries found. Which suggests that some stocks under-performed and got replaced with new ones over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_stocks_yy %>% select(1) %>% distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 65 × 1\n   Symbol    \n   <chr>     \n 1 MUNDRAPORT\n 2 ADANIPORTS\n 3 ASIANPAINT\n 4 UTIBANK   \n 5 AXISBANK  \n 6 BAJAJ-AUTO\n 7 BAJAJFINSV\n 8 BAJAUTOFIN\n 9 BAJFINANCE\n10 BHARTI    \n# … with 55 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\n### Year vs Volume of stock traded\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mean of all volumes grouped by years. Able to see from the mean of all stocks volume, the count kept increasing every year. This can hint an increase in demat accounts and number of active trading as well. \n\n# between 2008 to 2009 and 2019 to 2020 there is a big increase in stock volumes. 2008 point to the stock market crash. 2019-2021 point to the covid-19 crisis, where stock market fell sharply and attracted more people in investing in stocks. \n\nall_stocks_yy %>% \n  group_by(yy) %>% \n  select(`Volume`) %>% \n  summarise_all(mean, na.rm=TRUE) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAdding missing grouping variables: `yy`\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 22 × 2\n      yy   Volume\n   <dbl>    <dbl>\n 1  2000  795317.\n 2  2001  782304.\n 3  2002  635197.\n 4  2003 1145646.\n 5  2004 1562821.\n 6  2005 1099397.\n 7  2006 1208818.\n 8  2007 1370318.\n 9  2008 1695820.\n10  2009 2372692.\n# … with 12 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\n### Checking no. of times a stock repeated itself\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabc <- all_stocks_yy %>% \n  pivot_wider(names_from=`yy`, values_from = `Volume`) %>% \n  group_by(Symbol) %>% select(Trades, 14:35) %>% \n  summarise_all(sum, na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAdding missing grouping variables: `Symbol`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_stocks_yy %>% write_csv(. , file='_data/AllData.csv')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: Cannot open file for writing:\n* 'C:\\Users\\Adithya\\Documents\\R\\DACSS_601_August2022_v2\\posts\\_data\\AllData.csv'\n```\n:::\n:::\n\n\n===================================================================\n\nthe result based on the grouped date column. We can see the highest number of shares ever sold was on 15 July 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwipro_year_wise<- wipro %>% \n  arrange(desc(`Volume`)) %>% \n  select(`Date`,`Volume`) %>% \n  group_by(`Date`)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in arrange(., desc(Volume)): object 'wipro' not found\n```\n:::\n\n```{.r .cell-code}\n  # ungroup() %>% \n  # arrange(desc(`Date`)) %>% \n  # slice(1:10)\n\nwipro_year_wise\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'wipro_year_wise' not found\n```\n:::\n:::\n\n\ntrying to visualize it in a ggplot. I will pick the top 10 results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(wipro_year_wise,20) %>%   \n  ggplot(aes(Date, Volume)) +\n  geom_point(size=2) +\n  geom_line(color='blue') +\n  labs(title='Wipro - Date vs Volume')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(wipro_year_wise, 20): object 'wipro_year_wise' not found\n```\n:::\n:::\n\n\nChecking for the year 2000\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwipro_y2000 <- wipro_year_wise %>% \n  filter()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(.): object 'wipro_year_wise' not found\n```\n:::\n:::\n\n\n## Reflection\n\n## Conclusion\n\nI got some clarity on the highs and lows of the stock market\n\n## Bibliography\n\nDownloaded dataset from kaggle - https://www.kaggle.com/datasets/rohanrao/nifty50-stock-market-data\n",
    "supporting": [
      "FinalProject_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}