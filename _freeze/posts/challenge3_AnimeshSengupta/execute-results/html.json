{
  "hash": "7a13feb69ef32f330b10f5409eb63284",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Animesh Sengupta\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"08/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - Animesh Sengupta\n  - USA Household Data\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(readxl)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organicpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xlsx ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.csv üåüüåüüåüüåüüåü\n\n## Challenge\nFor this challenge we choose the USA Households Data. The following section shows how the data is loaded, processed and pivoted to make it a tidier data.\n\n##Processing\n\n::: {.cell}\n\n```{.r .cell-code}\n#! label: Data loading\nUS_household_data <- read_excel(\"../posts/_data/USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx\",skip = 5, n_max = 353, col_names = c(\"Year\",\"Number\",\"Total\",\"pd_<15000\",\"pd_15000-24999\",\"pd_25000-34999\",\"pd_35000-49999\",\"pd_50000-74999\",\"pd_75000-99999\",\"pd_100000-149999\",\"pd_150000-199999\",\"pd_>200000\",\"median_income_estimate\",\"median_income_moe\",\"mean_income_estimate\",\"mean_income_moe\"))\n```\n:::\n\n###Data Preprocessing\n\n::: {.cell}\n\n```{.r .cell-code}\n#! label: Data processing\nUS_processed_data <- US_household_data%>%\n  rowwise()%>% #to ensure the following operation runs row wise\n  mutate(Race=case_when(\n    is.na(Number) ~ Year\n  ))%>%\n  ungroup()%>% # to stop rowwise operation\n  fill(Race,.direction = \"down\")%>%\n  subset(!is.na(Number))%>%\n  rowwise()%>%\n  mutate(\n    Year=strsplit(Year,' ')[[1]][1],\n    Race=ifelse(grepl(\"[0-9]\", Race ,perl=TRUE)[1],strsplit(Race,\" \\\\s*(?=[^ ]+$)\",perl=TRUE)[[1]][1],Race)\n  )\n\n#head(US_processed_data,10)\n```\n:::\n\n\n### Briefly describe the data\n\nThe US household data gives an insight of the income statistics of a generic household in USA. The feature set of the data is the following Year, Number, Total, pd_<15000, pd_15000-24999, pd_25000-34999, pd_35000-49999, pd_50000-74999, pd_75000-99999, pd_100000-149999, pd_150000-199999, pd_>200000, median_income_estimate, median_income_moe, mean_income_estimate, mean_income_moe, Race. Out of the following columns , the percent distribution of income classes can be pivoted longer. This transformation can be done using pivot_longer\n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     623.     713.\n2 USA      1990 NAFTA    2363.     800.\n3 France   1980 EU        439.    2396.\n4 Mexico   1990 NAFTA    1181.    1353.\n5 USA      1980 NAFTA     605.     877.\n6 France   1990 EU        927.     875.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#! label: Data Dimensions\nnrow(US_processed_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 340\n```\n:::\n\n```{.r .cell-code}\nncol(US_processed_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n\n```{.r .cell-code}\nexpected_columns <- ncol(US_processed_data)-9+2\nexpected_rows <- nrow(US_processed_data) * (9)\nexpected_columns\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\nexpected_rows\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3060\n```\n:::\n:::\n\n\nAny additional comments?\n\nOur dataset had 17 columns initially and after pivoting it will come down to 10 features.\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 √ó 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing               623.\n 2 Mexico   1980 NAFTA incoming               713.\n 3 USA      1990 NAFTA outgoing              2363.\n 4 USA      1990 NAFTA incoming               800.\n 5 France   1980 EU    outgoing               439.\n 6 France   1980 EU    incoming              2396.\n 7 Mexico   1990 NAFTA outgoing              1181.\n 8 Mexico   1990 NAFTA incoming              1353.\n 9 USA      1980 NAFTA outgoing               605.\n10 USA      1980 NAFTA incoming               877.\n11 France   1990 EU    outgoing               927.\n12 France   1990 EU    incoming               875.\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#! label: pivoting\nUS_pivot_data<-US_processed_data%>%\n  pivot_longer(\n    cols = starts_with(\"pd\"),\n    names_to = \"income_range\",\n    values_to = \"percent distribution\",\n    names_prefix=\"pd_\"\n  )\nhead(US_pivot_data,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 √ó 10\n   Year  Number Total median_inc‚Ä¶¬π media‚Ä¶¬≤ mean_‚Ä¶¬≥ mean_‚Ä¶‚Å¥ Race  incom‚Ä¶‚Åµ perce‚Ä¶‚Å∂\n   <chr> <chr>  <dbl>        <dbl>   <dbl> <chr>   <chr>   <chr> <chr>     <dbl>\n 1 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ <15000      9.1\n 2 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ 15000-‚Ä¶     8  \n 3 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ 25000-‚Ä¶     8.3\n 4 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ 35000-‚Ä¶    11.7\n 5 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ 50000-‚Ä¶    16.5\n 6 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ 75000-‚Ä¶    12.3\n 7 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ 100000‚Ä¶    15.5\n 8 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ 150000‚Ä¶     8.3\n 9 2019  128451   100        68703     904 98088   1042    ALL ‚Ä¶ >200000    10.3\n10 2018  128579   100        64324     704 91652   914     ALL ‚Ä¶ <15000     10.1\n# ‚Ä¶ with abbreviated variable names ¬π‚Äãmedian_income_estimate,\n#   ¬≤‚Äãmedian_income_moe, ¬≥‚Äãmean_income_estimate, ‚Å¥‚Äãmean_income_moe, ‚Åµ‚Äãincome_range,\n#   ‚Å∂‚Äã`percent distribution`\n```\n:::\n\n```{.r .cell-code}\ndim(US_pivot_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3060   10\n```\n:::\n:::\n\n\nAny additional comments?\n\nOur pivoted data has been properly processed and the dimensions also matches the expected row and column measures. The challenge is successfully completed",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}