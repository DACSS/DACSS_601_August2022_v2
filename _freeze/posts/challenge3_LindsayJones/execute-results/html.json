{
  "hash": "4222be49eeec55f9fcbf2b011eb2d256",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Lindsay Jones\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"08/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weight\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organicpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xlsx ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.csv üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimal_weight<-read_csv(\"_data/animal_weight.csv\",\n                        show_col_types = FALSE)\nprint(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 √ó 17\n  IPCC A‚Ä¶¬π Cattl‚Ä¶¬≤ Cattl‚Ä¶¬≥ Buffa‚Ä¶‚Å¥ Swine‚Ä¶‚Åµ Swine‚Ä¶‚Å∂ Chick‚Ä¶‚Å∑ Chick‚Ä¶‚Å∏ Ducks Turkeys\n  <chr>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>\n1 Indian ‚Ä¶     275     110     295      28      28     0.9     1.8   2.7     6.8\n2 Eastern‚Ä¶     550     391     380      50     180     0.9     1.8   2.7     6.8\n3 Africa       275     173     380      28      28     0.9     1.8   2.7     6.8\n4 Oceania      500     330     380      45     180     0.9     1.8   2.7     6.8\n5 Western‚Ä¶     600     420     380      50     198     0.9     1.8   2.7     6.8\n6 Latin A‚Ä¶     400     305     380      28      28     0.9     1.8   2.7     6.8\n7 Asia         350     391     380      50     180     0.9     1.8   2.7     6.8\n8 Middle ‚Ä¶     275     173     380      28      28     0.9     1.8   2.7     6.8\n9 Norther‚Ä¶     604     389     380      46     198     0.9     1.8   2.7     6.8\n# ‚Ä¶ with 7 more variables: Sheep <dbl>, Goats <dbl>, Horses <dbl>, Asses <dbl>,\n#   Mules <dbl>, Camels <dbl>, Llamas <dbl>, and abbreviated variable names\n#   ¬π‚Äã`IPCC Area`, ¬≤‚Äã`Cattle - dairy`, ¬≥‚Äã`Cattle - non-dairy`, ‚Å¥‚ÄãBuffaloes,\n#   ‚Åµ‚Äã`Swine - market`, ‚Å∂‚Äã`Swine - breeding`, ‚Å∑‚Äã`Chicken - Broilers`,\n#   ‚Å∏‚Äã`Chicken - Layers`\n# ‚Ñπ Use `colnames()` to see all variable names\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThis data set contains the average weight of 17 different groups of animals in 9 regions of the world. This data set is not tidy because the variables (animal species and average weight) are not set as the columns. Using pivot_longer will fix that. \n\n### Challenge: Pivot the Chosen Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naw_pivot <- pivot_longer(animal_weight, \n             \"Cattle - dairy\":\"Llamas\", \n             names_to = \"Species\",\n             values_to = \"Weight\")\nprint(aw_pivot)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 144 √ó 3\n   `IPCC Area`         Species            Weight\n   <chr>               <chr>               <dbl>\n 1 Indian Subcontinent Cattle - dairy      275  \n 2 Indian Subcontinent Cattle - non-dairy  110  \n 3 Indian Subcontinent Buffaloes           295  \n 4 Indian Subcontinent Swine - market       28  \n 5 Indian Subcontinent Swine - breeding     28  \n 6 Indian Subcontinent Chicken - Broilers    0.9\n 7 Indian Subcontinent Chicken - Layers      1.8\n 8 Indian Subcontinent Ducks                 2.7\n 9 Indian Subcontinent Turkeys               6.8\n10 Indian Subcontinent Sheep                28  \n# ‚Ä¶ with 134 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nThis format makes it more difficult to look at the data for each country, but this could be solved using a few different functions. If we wanted to examine both types of cattle in every country:\n\n\n::: {.cell}\n\n```{.r .cell-code}\naw_pivot %>%\n  filter(grepl('Cattle', Species))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 √ó 3\n   `IPCC Area`         Species            Weight\n   <chr>               <chr>               <dbl>\n 1 Indian Subcontinent Cattle - dairy        275\n 2 Indian Subcontinent Cattle - non-dairy    110\n 3 Eastern Europe      Cattle - dairy        550\n 4 Eastern Europe      Cattle - non-dairy    391\n 5 Africa              Cattle - dairy        275\n 6 Africa              Cattle - non-dairy    173\n 7 Oceania             Cattle - dairy        500\n 8 Oceania             Cattle - non-dairy    330\n 9 Western Europe      Cattle - dairy        600\n10 Western Europe      Cattle - non-dairy    420\n11 Latin America       Cattle - dairy        400\n12 Latin America       Cattle - non-dairy    305\n13 Asia                Cattle - dairy        350\n14 Asia                Cattle - non-dairy    391\n15 Middle east         Cattle - dairy        275\n16 Middle east         Cattle - non-dairy    173\n17 Northern America    Cattle - dairy        604\n18 Northern America    Cattle - non-dairy    389\n```\n:::\n:::",
    "supporting": [
      "challenge3_LindsayJones_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}