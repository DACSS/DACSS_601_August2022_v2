{
  "hash": "5dc9c42992f8f38865959639eba5fd5d",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Young Soo Choi\"\ndesription: \"Joining Data\"\ndate: \"08/25/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data 1\n\nRead the data about FAO.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfao_egg<-read_csv(\"_data/FAOSTAT_egg_chicken.csv\",show_col_types = FALSE)\nfao_egg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38,170 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1961  1961\n 2 QL           Lives…       2 Afgh…    5410 Yield      1062 Eggs…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…    1062 Eggs…    1961  1961\n 4 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1962  1962\n 5 QL           Lives…       2 Afgh…    5410 Yield      1062 Eggs…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…    1062 Eggs…    1962  1962\n 7 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1963  1963\n 8 QL           Lives…       2 Afgh…    5410 Yield      1062 Eggs…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…    1062 Eggs…    1963  1963\n10 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1964  1964\n# … with 38,160 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\nfao_livestock<-read_csv(\"_data/FAOSTAT_livestock.csv\",show_col_types = FALSE)\nfao_livestock\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 82,116 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1961  1961\n 2 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1962  1962\n 3 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1963  1963\n 4 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1964  1964\n 5 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1965  1965\n 6 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1966  1966\n 7 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1967  1967\n 8 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1968  1968\n 9 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1969  1969\n10 QA           Live …       2 Afgh…    5111 Stocks     1107 Asses    1970  1970\n# … with 82,106 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\nfao_cattle<-read_csv(\"_data/FAOSTAT_cattle_dairy.csv\",show_col_types = FALSE)\nfao_cattle\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 36,449 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962\n 5 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1963  1963\n 8 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1963  1963\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1964  1964\n# … with 36,439 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\nfao_country<-read_csv(\"_data/FAOSTAT_country_groups.csv\",show_col_types = FALSE)\nfao_country\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,943 × 7\n   `Country Group Code` `Country Group` Countr…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                  <dbl> <chr>              <dbl> <chr>   <chr>   <chr>   <chr>  \n 1                 5100 Africa                 4 Algeria 012     DZ      DZA    \n 2                 5100 Africa                 7 Angola  024     AO      AGO    \n 3                 5100 Africa                53 Benin   204     BJ      BEN    \n 4                 5100 Africa                20 Botswa… 072     BW      BWA    \n 5                 5100 Africa               233 Burkin… 854     BF      BFA    \n 6                 5100 Africa                29 Burundi 108     BI      BDI    \n 7                 5100 Africa                35 Cabo V… 132     CV      CPV    \n 8                 5100 Africa                32 Camero… 120     CM      CMR    \n 9                 5100 Africa                37 Centra… 140     CF      CAF    \n10                 5100 Africa                39 Chad    148     TD      TCD    \n# … with 1,933 more rows, and abbreviated variable names ¹​`Country Code`,\n#   ²​`M49 Code`, ³​`ISO2 Code`, ⁴​`ISO3 Code`\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nIt looks like data about egg, chicken, livestock, and cattle. And country data file is maybe the direction of the interpret the domains, and countries that contained in the each data set. So I would like to join all the data except the country data. To do so, I looked up the column names of data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(fao_cattle)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(fao_livestock)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(fao_egg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n:::\n\nFortunately, It all have same column names. So I don't need to transform data to join them.\n\n## Join data 1\n\nFirst of all, I joined cattle and livestock data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_live<-full_join(fao_cattle, fao_livestock)\ncat_live\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 118,565 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962\n 5 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1963  1963\n 8 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1963  1963\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1964  1964\n# … with 118,555 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\nThey were joined successfully. The joined data now have 118,565rows. This is exactly the same as livestock and cattle combined. \nThen, I joined the egg and chicken data into that data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntot_fao<-full_join(cat_live, fao_egg)\ntot_fao\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 156,735 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962\n 5 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1963  1963\n 8 QL           Lives…       2 Afgh…    5420 Yield       882 Milk…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…     882 Milk…    1963  1963\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1964  1964\n# … with 156,725 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n:::\n\n\nNow, It has 156,735 rows that is exactly same as all the number of data is summed.\n\n## Read in data 2\n\nI read the data about snl.\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_seasons<-read_csv(\"_data/snl_seasons.csv\",show_col_types = FALSE)\nsnl_seasons\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46 × 5\n     sid  year first_epid last_epid n_episodes\n   <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n 1     1  1975   19751011  19760731         24\n 2     2  1976   19760918  19770521         22\n 3     3  1977   19770924  19780520         20\n 4     4  1978   19781007  19790526         20\n 5     5  1979   19791013  19800524         20\n 6     6  1980   19801115  19810411         13\n 7     7  1981   19811003  19820522         20\n 8     8  1982   19820925  19830514         20\n 9     9  1983   19831008  19840512         19\n10    10  1984   19841006  19850413         17\n# … with 36 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\nsnl_casts<-read_csv(\"_data/snl_casts.csv\",show_col_types = FALSE)\nsnl_casts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 8\n   aid                sid featured first_epid last_epid update…¹ n_epi…² seaso…³\n   <chr>            <dbl> <lgl>         <dbl>     <dbl> <lgl>      <dbl>   <dbl>\n 1 A. Whitney Brown    11 TRUE       19860222        NA FALSE          8   0.444\n 2 A. Whitney Brown    12 TRUE             NA        NA FALSE         20   1    \n 3 A. Whitney Brown    13 TRUE             NA        NA FALSE         13   1    \n 4 A. Whitney Brown    14 TRUE             NA        NA FALSE         20   1    \n 5 A. Whitney Brown    15 TRUE             NA        NA FALSE         20   1    \n 6 A. Whitney Brown    16 TRUE             NA        NA FALSE         20   1    \n 7 Alan Zweibel         5 TRUE       19800409        NA FALSE          5   0.25 \n 8 Sasheer Zamata      39 TRUE       20140118        NA FALSE         11   0.524\n 9 Sasheer Zamata      40 TRUE             NA        NA FALSE         21   1    \n10 Sasheer Zamata      41 FALSE            NA        NA FALSE         21   1    \n# … with 604 more rows, and abbreviated variable names ¹​update_anchor,\n#   ²​n_episodes, ³​season_fraction\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\nsnl_actors<-read_csv(\"_data/snl_actors.csv\",show_col_types = FALSE)\nsnl_actors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,306 × 4\n   aid            url           type  gender \n   <chr>          <chr>         <chr> <chr>  \n 1 Kate McKinnon  /Cast/?KaMc   cast  female \n 2 Alex Moffat    /Cast/?AlMo   cast  male   \n 3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n 4 Chris Redd     /Cast/?ChRe   cast  male   \n 5 Kenan Thompson /Cast/?KeTh   cast  male   \n 6 Carey Mulligan /Guests/?3677 guest andy   \n 7 Marcus Mumford /Guests/?3679 guest male   \n 8 Aidy Bryant    /Cast/?AiBr   cast  female \n 9 Steve Higgins  /Crew/?StHi   crew  male   \n10 Mikey Day      /Cast/?MiDa   cast  male   \n# … with 2,296 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\n1. Seasons data contains each seasons' year, period, and number of episode.\n2. Cast data contains data on each cast and the season they appeared in.\n3. Actor data contains their names, type, gender, and url. But I don't know what the url means.\n\n## Join data 2\n\nWhat I wonder is that the number of casts by each season. So I tidied the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsc<-snl_casts%>%\n  select(aid,sid)\nnoc<- count(group_by(sc, sid))\ncolnames(noc)<-c('sid', 'number_of_cast')\nnoc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46 × 2\n# Groups:   sid [46]\n     sid number_of_cast\n   <dbl>          <int>\n 1     1              9\n 2     2              8\n 3     3              9\n 4     4              9\n 5     5             15\n 6     6             15\n 7     7              8\n 8     8              8\n 9     9              9\n10    10             10\n# … with 36 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nNew data were created by dividing the number of casts that appeared by season.\nThen I joined this data with the existing season data by using join function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nj_snl<-full_join(snl_seasons, noc, key='sid')\nj_snl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46 × 6\n     sid  year first_epid last_epid n_episodes number_of_cast\n   <dbl> <dbl>      <dbl>     <dbl>      <dbl>          <int>\n 1     1  1975   19751011  19760731         24              9\n 2     2  1976   19760918  19770521         22              8\n 3     3  1977   19770924  19780520         20              9\n 4     4  1978   19781007  19790526         20              9\n 5     5  1979   19791013  19800524         20             15\n 6     6  1980   19801115  19810411         13             15\n 7     7  1981   19811003  19820522         20              8\n 8     8  1982   19820925  19830514         20              8\n 9     9  1983   19831008  19840512         19              9\n10    10  1984   19841006  19850413         17             10\n# … with 36 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(j_snl, mapping=aes(x=year, y=number_of_cast))+\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](challenge8-youngsoo-choi_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThe graph shows that the number of casts appearing per season during SNL 46 seasons is gradually increasing.\n\n\n",
    "supporting": [
      "challenge8-youngsoo-choi_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}