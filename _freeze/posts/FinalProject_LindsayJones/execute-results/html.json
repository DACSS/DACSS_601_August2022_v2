{
  "hash": "520978c453a8a8f7960e1d92df987b2a",
  "result": {
    "markdown": "---\ntitle: \"Final Project\"\nauthor: \"Lindsay Jones\"\ndescription: \"Baby Names in the US\"\ndate: \"09/02/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final\n---\n\n\n# Introduction\n\nA person's name can be a reflection of many things: their gender, when and where they were born, who or what their parents wanted them to be, etc.\n\nFor this data analysis I chose to investigate the following:\n\n-   How have American names evolved over time?\n-   How do names vary between states?\n-   What is the impact of a specific celebrity on the popularity of a name?\n\n# Setting Up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(usmap)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n# The Data\n\nMy data was originally sourced from the Social Security Administration (SSA). It includes babies born from 1880-2021, organized by state, sex, year, name, and count (number of babies born with that name), For privacy purposes, this data does not include instances where fewer than 5 babies were born with that name.\n\nUnfortunately, I discovered too late that there is already a \"babynames\" package in R. Instead of using this package, I downloaded 51 files (50 states + Washington D.C.) from the SSA. First, I read in each file. I then read in a tidied version of the national dataset from Kaggle, saving me the effort of reading in 141 additional files.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nAK <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AK.csv\", \n    col_names = FALSE)\nAL <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AL.csv\", \n    col_names = FALSE)\nAR <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AR.csv\", \n    col_names = FALSE)\nAZ <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AZ.csv\",\n    col_names = FALSE)\nCA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/CA.csv\", \n    col_names = FALSE)\nCO <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/CO.csv\", \n    col_names = FALSE)\nCT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/CT.csv\", \n    col_names = FALSE)\nDC <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/DC.csv\", \n    col_names = FALSE)\nDE <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/DE.csv\", \n    col_names = FALSE)\nFL <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/FL.csv\", \n    col_names = FALSE)\nGA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/GA.csv\", \n    col_names = FALSE)\nHI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/HI.csv\", \n    col_names = FALSE)\nIA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/IA.csv\", \n    col_names = FALSE)\nID <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/ID.csv\", \n    col_names = FALSE)\nIL <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/IL.csv\", \n    col_names = FALSE)\nIN <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/IN.csv\", \n    col_names = FALSE)\nKS <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/KS.csv\", \n    col_names = FALSE)\nKY <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/KY.csv\", \n    col_names = FALSE)\nLA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/LA.csv\", \n    col_names = FALSE)\nMA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MA.csv\", \n    col_names = FALSE)\nMD <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MD.csv\", \n    col_names = FALSE)\nME <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/ME.csv\", \n    col_names = FALSE)\nMI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MI.csv\", \n    col_names = FALSE)\nMN <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MN.csv\", \n    col_names = FALSE)\nMO <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MO.csv\", \n    col_names = FALSE)\nMS <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MS.csv\", \n    col_names = FALSE)\nMT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MT.csv\", \n    col_names = FALSE)\nNC <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NC.csv\", \n    col_names = FALSE)\nND <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/ND.csv\", \n    col_names = FALSE)\nNE <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NE.csv\", \n    col_names = FALSE)\nNH <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NH.csv\", \n    col_names = FALSE)\nNJ <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NJ.csv\", \n    col_names = FALSE)\nNM <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NM.csv\", \n    col_names = FALSE)\nNV <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NV.csv\", \n    col_names = FALSE)\nNY <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NY.csv\", \n    col_names = FALSE)\nOH <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/OH.csv\", \n    col_names = FALSE)\nOK <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/OK.csv\", \n    col_names = FALSE)\nOR <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/OR.csv\", \n    col_names = FALSE)\nPA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/PA.csv\", \n    col_names = FALSE)\nRI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/RI.csv\", \n    col_names = FALSE)\nSC <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/SC.csv\", \n    col_names = FALSE)\nSD <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/SD.csv\", \n    col_names = FALSE)\nTN <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/TN.csv\", \n    col_names = FALSE)\nTX <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/TX.csv\", \n    col_names = FALSE)\nUT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/UT.csv\", \n    col_names = FALSE)\nVA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/VA.csv\", \n    col_names = FALSE)\nVT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/VT.csv\", \n    col_names = FALSE)\nWA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WA.csv\", \n    col_names = FALSE)\nWI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WI.csv\", \n    col_names = FALSE)\nWV <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WV.csv\", \n    col_names = FALSE)\nWY <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WY.csv\", \n    col_names = FALSE)\n\nus_names <- read_csv(\"~/School/UMASS/DACSS601/Final/names.csv\")\n```\n:::\n\n\n# Data Setup\n\nEach data set has the same variables organized in the same order, so I used `bind_rows()` to combine the state data into one dataset. The columns were unnamed, so I used `rename()` to name them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#bind all datasets\nstates <- bind_rows(AK, AL, AR, AZ, CA, CO, CT, DC, DE, FL, GA, HI, IA, ID, IL, IN, KS, KY, LA, MA, MD, ME, MI, MN, MO, MS, MT, NC, ND, NE, NH, NJ, NM, NV, NY, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VA, VT, WA, WI, WV, WY)\n\n#rename columns\nstates <- rename(states, \"State\" = \"X1\", \"Sex\" = \"X2\", \"Year\" = \"X3\", \"Name\" = \"X4\", \"Count\" = \"X5\")\n\nstates\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6,311,504 × 5\n   State Sex    Year Name     Count\n   <chr> <chr> <dbl> <chr>    <dbl>\n 1 AK    F      1910 Mary        14\n 2 AK    F      1910 Annie       12\n 3 AK    F      1910 Anna        10\n 4 AK    F      1910 Margaret     8\n 5 AK    F      1910 Helen        7\n 6 AK    F      1910 Elsie        6\n 7 AK    F      1910 Lucy         6\n 8 AK    F      1910 Dorothy      5\n 9 AK    F      1911 Mary        12\n10 AK    F      1911 Margaret     7\n# … with 6,311,494 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nFrom here I `split()` the state data into separate datasets by sex, so that I could more easily perform analyses by sex.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#split state data by sex\nX <- split(states, states$Sex)\n\n#assign each tibble a name for ease\nf_state <- X$F\nm_state <- X$M\n```\n:::\n\n\nI did the same with the national data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#split national data by sex\nY <- split(us_names, us_names$Sex)\n\n#assign each tibble a name for ease\nf_natl <- Y$F\nm_natl <- Y$M\n```\n:::\n\n\n# Visualizations\n\n## How have American names evolved over time?\n\nI wanted to investigate the evolution of American names by creating two line graphs, one for each sex, which shows the most popular names on record and illustrates their popularity over time. I also wanted \"social generations\" shown on the plots to illustrate which names were most popular with each generation.\n\nFirst, I pulled the top names for each year. Then, I created dataset filtered for only these names and plotted them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#top female names nationally, arranged by year\nf_natl %>%\n  group_by(Year) %>%\n  top_n(1, Count) %>%\n  arrange(Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 142 × 4\n# Groups:   Year [142]\n   Name  Sex   Count  Year\n   <chr> <chr> <dbl> <dbl>\n 1 Mary  F      7065  1880\n 2 Mary  F      6919  1881\n 3 Mary  F      8148  1882\n 4 Mary  F      8012  1883\n 5 Mary  F      9217  1884\n 6 Mary  F      9128  1885\n 7 Mary  F      9889  1886\n 8 Mary  F      9888  1887\n 9 Mary  F     11754  1888\n10 Mary  F     11648  1889\n# … with 132 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\n#top male names nationally, arranged by year\nm_natl %>%\n  group_by(Year) %>%\n  top_n(1, Count) %>%\n  arrange(Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 142 × 4\n# Groups:   Year [142]\n   Name  Sex   Count  Year\n   <chr> <chr> <dbl> <dbl>\n 1 John  M      9655  1880\n 2 John  M      8769  1881\n 3 John  M      9557  1882\n 4 John  M      8894  1883\n 5 John  M      9388  1884\n 6 John  M      8756  1885\n 7 John  M      9026  1886\n 8 John  M      8110  1887\n 9 John  M      9247  1888\n10 John  M      8548  1889\n# … with 132 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\n#setting up dataset to compare top female names\ntop_f <- f_natl %>%\n  filter(Name %in% c(\"Mary\", \"Linda\", \"Lisa\", \"Jennifer\", \"Jessica\", \"Ashley\", \"Emily\", \"Emma\", \"Isabella\", \"Sophia\", \"Olivia\"))\n\n#top male names nationally, arranged by year\ntop_m <- m_natl %>%\n  filter(Name %in% c(\"John\", \"Robert\", \"James\", \"Michael\", \"David\", \"Jacob\", \"Liam\"))\n\n#line plot\nfgens <- top_f %>%\n  ggplot(aes(x=Year, y=Count, group=Name, color=Name)) +\n    geom_line(size=1.25) +\n    theme_bw()+\n    ggtitle(\"Top Baby Girl Names by Generation\") +\n    ylab(\"Number of Babies Born\") +\n    #add bars to highlight generations\n    geom_rect(data = top_f,\n            aes(xmin = 1883, xmax = 1900, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_f,\n            aes(xmin = 1928, xmax = 1945, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_f,\n            aes(xmin = 1965, xmax = 1980, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_f,\n            aes(xmin = 1997, xmax = 2012, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    annotate(\"text\", x=1892, y=100000, label=\"Lost\")+\n    annotate(\"text\", x=1914, y=95000, label=\"Greatest\")+\n    annotate(\"text\", x=1936, y=100000, label=\"Silent\")+\n    annotate(\"text\", x=1955, y=95000, label=\"Boomers\")+\n    annotate(\"text\", x=1973, y=100000, label=\"X\")+\n    annotate(\"text\", x=1988, y=95000, label=\"Millennials\")+\n    annotate(\"text\", x=2005, y=100000, label=\"Z\")+\n    annotate(\"text\", x=2017, y=95000, label=\"Alpha\")\n\n#line plot\nmgens <- top_m %>%\n  ggplot(aes(x=Year, y=Count, group=Name, color=Name)) +\n    geom_line(size=1.25) +\n    theme_bw()+\n    ggtitle(\"Top Baby Boy Names by Generation\") +\n    ylab(\"Number of Babies Born\") +\n    #add bars to highlight generations\n    geom_rect(data = top_m,\n            aes(xmin = 1883, xmax = 1900, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_m,\n            aes(xmin = 1928, xmax = 1945, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_m,\n            aes(xmin = 1965, xmax = 1980, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_m,\n            aes(xmin = 1997, xmax = 2012, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    annotate(\"text\", x=1892, y=100000, label=\"Lost\")+\n    annotate(\"text\", x=1914, y=95000, label=\"Greatest\")+\n    annotate(\"text\", x=1936, y=100000, label=\"Silent\")+\n    annotate(\"text\", x=1955, y=95000, label=\"Boomers\")+\n    annotate(\"text\", x=1973, y=100000, label=\"X\")+\n    annotate(\"text\", x=1988, y=95000, label=\"Millennials\")+\n    annotate(\"text\", x=2005, y=100000, label=\"Z\")+\n    annotate(\"text\", x=2017, y=95000, label=\"Alpha\")\n\npar(mfrow= c(1,2))+\nplot(fgens)+\nplot(mgens)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n\nWe can see that the female names are slightly more diverse, as there are 11 compared to only 7 male names. There also tends to be one or two dominant female names in each generation, whereas male names are pretty closely split between at least three; however, approaching Gen Z, both sexes trend towards a more even split between several of the names. This could be interpreted as the diversification or detraditionalization of American names, though further analysis is required to prove this.\n\n## How do names vary between states?\n\nTo examine how names vary between states, I created static maps of female names across two generations: Millennials and Gen Z.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create top female millennial names dataset\ntop_mill_f <- f_state %>%\n  filter(Year %in% c(1981:1996)) %>%\n  group_by(State) %>%\n  top_n(1, Count) %>%\n  #need to use a lowercase `s` so the plot_usmap function will work\n  rename(state = State)\n\n#plot\nmillmap <- plot_usmap(data = top_mill_f, values = \"Name\") +\n  labs(title = \"Top Female Millennial Names\") +\n  theme(plot.title=element_text(hjust=0.5, size = 20))+\n  theme(legend.position = \"right\")\n\n#create top female gen z names dataset\ntop_genz_f <- f_state %>%\n  filter(Year %in% c(1997:2012)) %>%\n  group_by(State) %>%\n  top_n(1, Count) %>%\n  #need to use a lowercase `s` so the plot_usmap function will work\n  rename(state = State)\n\n#plot\ngenzmap <- plot_usmap(data = top_genz_f, values = \"Name\") +\n  labs(title = \"Top Female Gen Z Names\") +\n  theme(plot.title=element_text(hjust=0.5, size = 20))+\n  theme(legend.position = \"right\")\n\npar(mfrow= c(1,2))\nplot(millmap)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genzmap)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\nI did not anticipate that there would be no overlap between generations at all, though perhaps I should have given the previous analysis. Unsurprisingly, there are more Gen Z names and they are distributed less evenly than Millennial names, which supports my previous assertion that names have become increasingly diverse and/or less traditional in America. I do find it interesting that, in both maps, there are somewhat distinct regional differences. There are very few continental states which are \"islands\" not bordering others with the same most popular name.\n\n## What is the impact of a specific celebrity on the popularity of a name?\n\nI was inspired by [an article](https://www.espn.com/nba/story/_/id/31309206/the-jalen-generation-how-jalen-rose-name-spread-world-sports) I read several months ago which discussed the impact NBA star Jalen Rose had on the popularity of the name Jalen. Many college and professional athletes today share the name, which was almost unheard of before Rose started playing college basketball in 1991.\n\nI started by filtering Jalen (and every spelling variant I could think of) from the National dataset. Then I found the sum of every instance per year and plotted that. I also set the x-axis to begin at 1980 to improve the graph's visibility, since there were very few Jalens born before the 1980s.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#filter out all the Jalens\njalen_natl <- us_names %>%\n  filter(Name %in% c(\"Jalen\", \"Jalin\", \"Jalyn\", \"Jalon\", \"Jaylen\", \"Jaylyn\", \"Jaylynn\", \"Jaylin\", \"Jaylon\", \"Jaelen\", \"Jaelyn\", \"Jaelynn\", \"Jailyn\", \"Jailynn\", \"Jailen\", \"Jailon\")) %>%\n  arrange(Year)\n#find the sum of all Jalens (and variants) by year\njalen_natl <- aggregate(jalen_natl[\"Count\"],by=jalen_natl[\"Year\"],sum)\n  \n#plot\nggplot(jalen_natl, aes(x=Year, y=Count)) +\n  xlim(1980,2021)+\n  geom_line(color=\"#69b3a2\", size=2, alpha=0.9) +\n  labs(title = \"The Rise and Fall of Jalen*\",\n              subtitle = \"*and variants\",\n              caption = str_wrap(\"spelling variants include: Jalen, Jalin, Jalyn, Jalon, Jaylen, Jaylyn, Jaylynn, Jaylin,   Jaylon, Jaelen, Jaelyn, Jaelynn, Jailyn, Jailynn, Jailen, Jailon\")) +\n  theme(plot.title=element_text(hjust=0.5, size = 20),\n        plot.subtitle=element_text(hjust=0.5))+\n  geom_vline(xintercept=1991)+\n  geom_vline(xintercept=1997)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nI struggled to demonstrate this adequately on the graph, but you can see a sharp increase in Jalens in 1991 (when Jalen Rose started for Michigan) and 1997 (when Rose and his team performed well in the 97-98 season NBA Playoffs). If I had the time/resources, I would have liked to explore this further by comparing this graph with the number of college athletes who have this name.\n\n# Reflection\n\nNames are a personal interest of mine, and I enjoyed taking an exploratory approach to this data for my first real R project. As I grow more comfortable with R and learn more about data visualization, I can see this being something I return to with more advanced research questions.I wish I had known about the `babynames` package before I got too invested in my work, but I decided not to use it so that I could demonstrate row binds. If I try this again I will definitely start with that package.\n\nMy data was fairly tidy to begin with, so the most challenging part of this process for me was setting up specific datasets so that my visualizations would be accurate. For example, it took me a while to figure out that the `aggregate()` command is what I needed to find the number of Jalens born each year. Since most of my analysis involved the popularity of names in terms of certain variables, I became very comfortable using `filter()` and `group_by()`.\n\nIt was more challenging than I anticipated to create visualizations that were both accurate and visually effective. When creating charts for the top names by generation, I originally planned to create sort of a heat map. Even when I got the data to display correctly, it was so unattractive that I decided to switch to a line graph.\n\nAn interesting continuation of this project would be an animated map of the United States, which shows the most popular names in each state and how they change each year. This is something I looked into but did not have the time for.\n\nI also intended to examine NCAA rosters for Jalens and compare this to the SSA data, but it proved too difficult to gather the data myself. A Sankey diagram showing how many Jalens end up in different sports may have been interesting.\n\n# Conclusion\n\nI think the most interesting conclusion that can be drawn from this analysis is that American names are increasing in variety- while there will always be certain names which are popular with certain generations, more recent generations are not defined by particular names the way previous generations could be defined by names like \"Mary\" and \"John\". Naming patterns may also be regional, demonstrating the effect that culture and identity may have on names. Finally, we could see the direct impact the success of a celebrity had on a previously unheard of name.\n\nThis analysis does not take race/ethnicity into consideration. The popularity of a name, how it might be spelled, which sex it is assigned to, etc. can be impacted by race. I don't know if it would be possible to collect this data, as I don't believe it is standard to collect racial data at birth, but I feel it is important to recognize how naming patterns might be affected by this.\n\n# Bibliography\n\n-   Di Lorenzo, P. (2022, February 27). Mapping the US. The Comprehensive R Archive Network. Retrieved August 31, 2022 from https://cran.r-project.org/web/packages/usmap/vignettes/mapping.html\n-   Mulla, R. (2022, August). US Baby Name Popularity, Version 1. Retrieved August 28, 2022 from https://www.kaggle.com/datasets/robikscube/us-baby-name-popularity.\n-   R Core Team (2022). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.\n-   Wickham, H., & Grolemund, G. (2016). R for data science: Visualize, model, transform, tidy, and import data. OReilly Media.\n-   Wikimedia Foundation. (2022, August 26). Generation. Wikipedia. Retrieved August 29, 2022, from https://en.wikipedia.org/w/index.php?title=Generation&oldid=1106806918\n",
    "supporting": [
      "FinalProject_LindsayJones_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}