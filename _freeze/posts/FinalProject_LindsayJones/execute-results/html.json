{
  "hash": "5d24a9840ac07145a6ce595f6cb912c0",
  "result": {
    "markdown": "---\ntitle: \"Final Project DRAFT\"\nauthor: \"Lindsay Jones\"\ndescription: \"Baby Names in the US\"\ndate: \"09/02/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(usmap)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Introduction\n\n\n## Tidying the Data\n\nThe data I've chosen to use is fairly clean. However, it came in separate CSV files for each state (and Washington DC). First, I have to read in all 51 files. I'm also going to cheat and read in a data set I found that has the national data already cleaned up, becaues I already spent so much time reading in 51 other data sets. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nAK <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AK.csv\", \n    col_names = FALSE)\nAL <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AL.csv\", \n    col_names = FALSE)\nAR <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AR.csv\", \n    col_names = FALSE)\nAZ <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/AZ.csv\",\n    col_names = FALSE)\nCA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/CA.csv\", \n    col_names = FALSE)\nCO <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/CO.csv\", \n    col_names = FALSE)\nCT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/CT.csv\", \n    col_names = FALSE)\nDC <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/DC.csv\", \n    col_names = FALSE)\nDE <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/DE.csv\", \n    col_names = FALSE)\nFL <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/FL.csv\", \n    col_names = FALSE)\nGA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/GA.csv\", \n    col_names = FALSE)\nHI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/HI.csv\", \n    col_names = FALSE)\nIA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/IA.csv\", \n    col_names = FALSE)\nID <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/ID.csv\", \n    col_names = FALSE)\nIL <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/IL.csv\", \n    col_names = FALSE)\nIN <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/IN.csv\", \n    col_names = FALSE)\nKS <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/KS.csv\", \n    col_names = FALSE)\nKY <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/KY.csv\", \n    col_names = FALSE)\nLA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/LA.csv\", \n    col_names = FALSE)\nMA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MA.csv\", \n    col_names = FALSE)\nMD <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MD.csv\", \n    col_names = FALSE)\nME <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/ME.csv\", \n    col_names = FALSE)\nMI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MI.csv\", \n    col_names = FALSE)\nMN <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MN.csv\", \n    col_names = FALSE)\nMO <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MO.csv\", \n    col_names = FALSE)\nMS <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MS.csv\", \n    col_names = FALSE)\nMT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/MT.csv\", \n    col_names = FALSE)\nNC <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NC.csv\", \n    col_names = FALSE)\nND <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/ND.csv\", \n    col_names = FALSE)\nNE <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NE.csv\", \n    col_names = FALSE)\nNH <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NH.csv\", \n    col_names = FALSE)\nNJ <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NJ.csv\", \n    col_names = FALSE)\nNM <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NM.csv\", \n    col_names = FALSE)\nNV <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NV.csv\", \n    col_names = FALSE)\nNY <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/NY.csv\", \n    col_names = FALSE)\nOH <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/OH.csv\", \n    col_names = FALSE)\nOK <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/OK.csv\", \n    col_names = FALSE)\nOR <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/OR.csv\", \n    col_names = FALSE)\nPA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/PA.csv\", \n    col_names = FALSE)\nRI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/RI.csv\", \n    col_names = FALSE)\nSC <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/SC.csv\", \n    col_names = FALSE)\nSD <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/SD.csv\", \n    col_names = FALSE)\nTN <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/TN.csv\", \n    col_names = FALSE)\nTX <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/TX.csv\", \n    col_names = FALSE)\nUT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/UT.csv\", \n    col_names = FALSE)\nVA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/VA.csv\", \n    col_names = FALSE)\nVT <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/VT.csv\", \n    col_names = FALSE)\nWA <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WA.csv\", \n    col_names = FALSE)\nWI <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WI.csv\", \n    col_names = FALSE)\nWV <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WV.csv\", \n    col_names = FALSE)\nWY <- read_csv(\"~/School/UMASS/DACSS601/Final/namesbystate/WY.csv\", \n    col_names = FALSE)\n\nus_names <- read_csv(\"~/School/UMASS/DACSS601/Final/names.csv\")\n```\n:::\n\n\n\nNow that I've read in all those data sets, I need to combine them into one data frame and give them column names (since none of the files had column names). Once that's done, I'll sort by year. \n\n::: {.cell}\n\n```{.r .cell-code}\n#bind all data frames\nstates <- bind_rows(AK, AL, AR, AZ, CA, CO, CT, DC, DE, FL, GA, HI, IA, ID, IL, IN, KS, KY, LA, MA, MD, ME, MI, MN, MO, MS, MT, NC, ND, NE, NH, NJ, NM, NV, NY, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VA, VT, WA, WI, WV, WY)\n\n#rename columns\nstates <- rename(states, \"State\" = \"X1\", \"Sex\" = \"X2\", \"Year\" = \"X3\", \"Name\" = \"X4\", \"Count\" = \"X5\")\n\nstates\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6,311,504 × 5\n   State Sex    Year Name     Count\n   <chr> <chr> <dbl> <chr>    <dbl>\n 1 AK    F      1910 Mary        14\n 2 AK    F      1910 Annie       12\n 3 AK    F      1910 Anna        10\n 4 AK    F      1910 Margaret     8\n 5 AK    F      1910 Helen        7\n 6 AK    F      1910 Elsie        6\n 7 AK    F      1910 Lucy         6\n 8 AK    F      1910 Dorothy      5\n 9 AK    F      1911 Mary        12\n10 AK    F      1911 Margaret     7\n# … with 6,311,494 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#split state data into separate tibbles by sex\nX <- split(states, states$Sex)\n\n#assign each tibble a name for ease\nf_state <- X$F\nm_state <- X$M\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#split national data into separate tibbles by sex\nY <- split(us_names, us_names$Sex)\n\n#assign each tibble a name for ease\nf_natl <- Y$F\nm_natl <- Y$M\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(f_natl, Year, desc(Count))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,209,866 × 4\n   Name      Sex   Count  Year\n   <chr>     <chr> <dbl> <dbl>\n 1 Mary      F      7065  1880\n 2 Anna      F      2604  1880\n 3 Emma      F      2003  1880\n 4 Elizabeth F      1939  1880\n 5 Minnie    F      1746  1880\n 6 Margaret  F      1578  1880\n 7 Ida       F      1472  1880\n 8 Alice     F      1414  1880\n 9 Bertha    F      1320  1880\n10 Sarah     F      1288  1880\n# … with 1,209,856 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#top female names nationally, arranged by year\nf_natl %>%\n  group_by(Year) %>%\n  top_n(1, Count) %>%\n  arrange(Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 142 × 4\n# Groups:   Year [142]\n   Name  Sex   Count  Year\n   <chr> <chr> <dbl> <dbl>\n 1 Mary  F      7065  1880\n 2 Mary  F      6919  1881\n 3 Mary  F      8148  1882\n 4 Mary  F      8012  1883\n 5 Mary  F      9217  1884\n 6 Mary  F      9128  1885\n 7 Mary  F      9889  1886\n 8 Mary  F      9888  1887\n 9 Mary  F     11754  1888\n10 Mary  F     11648  1889\n# … with 132 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\n#setting up data frame to compare top female names\ntop_f <- f_natl %>%\n  filter(Name %in% c(\"Mary\", \"Linda\", \"Lisa\", \"Jennifer\", \"Jessica\", \"Ashley\", \"Emily\", \"Emma\", \"Isabella\", \"Sophia\", \"Olivia\"))\n\n#line plot\nfgens <- top_f %>%\n  ggplot(aes(x=Year, y=Count, group=Name, color=Name)) +\n    geom_line(size=1.25) +\n    theme_bw()+\n    ggtitle(\"Top Baby Girl Names\") +\n    ylab(\"Number of Babies Born\") +\n    #add bars to highlight generations\n    geom_rect(data = top_f,\n            aes(xmin = 1883, xmax = 1900, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_f,\n            aes(xmin = 1928, xmax = 1945, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_f,\n            aes(xmin = 1965, xmax = 1980, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_f,\n            aes(xmin = 1997, xmax = 2012, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    annotate(\"text\", x=1892, y=100000, label=\"Lost\")+\n    annotate(\"text\", x=1914, y=95000, label=\"Greatest\")+\n    annotate(\"text\", x=1936, y=100000, label=\"Silent\")+\n    annotate(\"text\", x=1955, y=95000, label=\"Boomers\")+\n    annotate(\"text\", x=1973, y=100000, label=\"X\")+\n    annotate(\"text\", x=1988, y=95000, label=\"Millennials\")+\n    annotate(\"text\", x=2005, y=100000, label=\"Z\")+\n    annotate(\"text\", x=2017, y=95000, label=\"Alpha\")\n\nm_natl %>%\n  group_by(Year) %>%\n  top_n(1, Count) %>%\n  arrange(Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 142 × 4\n# Groups:   Year [142]\n   Name  Sex   Count  Year\n   <chr> <chr> <dbl> <dbl>\n 1 John  M      9655  1880\n 2 John  M      8769  1881\n 3 John  M      9557  1882\n 4 John  M      8894  1883\n 5 John  M      9388  1884\n 6 John  M      8756  1885\n 7 John  M      9026  1886\n 8 John  M      8110  1887\n 9 John  M      9247  1888\n10 John  M      8548  1889\n# … with 132 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\n#top male names nationally, arranged by year\ntop_m <- m_natl %>%\n  filter(Name %in% c(\"John\", \"Robert\", \"James\", \"Michael\", \"David\", \"Jacob\", \"Liam\"))\n\n#line plot\nmgens <- top_m %>%\n  ggplot(aes(x=Year, y=Count, group=Name, color=Name)) +\n    geom_line(size=1.25) +\n    theme_bw()+\n    ggtitle(\"Top Baby Boy Names\") +\n    ylab(\"Number of Babies Born\") +\n    #add bars to highlight generations\n    geom_rect(data = top_m,\n            aes(xmin = 1883, xmax = 1900, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_m,\n            aes(xmin = 1928, xmax = 1945, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_m,\n            aes(xmin = 1965, xmax = 1980, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    geom_rect(data = top_m,\n            aes(xmin = 1997, xmax = 2012, ymin = -Inf, ymax = Inf),\n            color = NA, fill = \"grey\", alpha = 0.01)+\n    annotate(\"text\", x=1892, y=100000, label=\"Lost\")+\n    annotate(\"text\", x=1914, y=95000, label=\"Greatest\")+\n    annotate(\"text\", x=1936, y=100000, label=\"Silent\")+\n    annotate(\"text\", x=1955, y=95000, label=\"Boomers\")+\n    annotate(\"text\", x=1973, y=100000, label=\"X\")+\n    annotate(\"text\", x=1988, y=95000, label=\"Millennials\")+\n    annotate(\"text\", x=2005, y=100000, label=\"Z\")+\n    annotate(\"text\", x=2017, y=95000, label=\"Alpha\")\n\npar(mfrow= c(1,2) )\nplot(fgens)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mgens)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#name popularity by generation\nf_natl %>%\n  filter(Year %in% c(1883:1900)) %>%\n  group_by(Year) %>%\n  top_n(1, Count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 × 4\n# Groups:   Year [18]\n   Name  Sex   Count  Year\n   <chr> <chr> <dbl> <dbl>\n 1 Mary  F     11754  1888\n 2 Mary  F     13172  1899\n 3 Mary  F     14406  1898\n 4 Mary  F     11648  1889\n 5 Mary  F     13447  1895\n 6 Mary  F      8012  1883\n 7 Mary  F     12078  1890\n 8 Mary  F      9889  1886\n 9 Mary  F      9128  1885\n10 Mary  F     12784  1893\n11 Mary  F      9217  1884\n12 Mary  F     13151  1894\n13 Mary  F      9888  1887\n14 Mary  F     13172  1892\n15 Mary  F     11703  1891\n16 Mary  F     13413  1897\n17 Mary  F     13811  1896\n18 Mary  F     16705  1900\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create top male gen z names data frame\ntop_genz_m <- m_state %>%\n  filter(Year %in% c(1997:2012)) %>%\n  group_by(State) %>%\n  top_n(1, Count) %>%\n  rename(state = State)\n\n#plot\nmmap <- plot_usmap(data = top_genz_m, values = \"Name\") +\n  labs(title = \"Top Male Gen Z Names\") +\n  theme(plot.title=element_text(hjust=0.5, size = 20))+\n  theme(legend.position = \"right\")\n\n#create top female gen z names data frame\ntop_genz_f <- f_state %>%\n  filter(Year %in% c(1997:2012)) %>%\n  group_by(State) %>%\n  top_n(1, Count) %>%\n  rename(state = State)\n\n#plot\nfmap <- plot_usmap(data = top_genz_f, values = \"Name\") +\n  labs(title = \"Top Female Gen Z Names\") +\n  theme(plot.title=element_text(hjust=0.5, size = 20))+\n  theme(legend.position = \"right\")\n\npar(mfrow= c(1,2) )\nplot(fmap)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mmap)\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#filter out all the Jalens\njalen_natl <- us_names %>%\n  filter(Name %in% c(\"Jalen\", \"Jalin\", \"Jalyn\", \"Jalon\", \"Jaylen\", \"Jaylyn\", \"Jaylynn\", \"Jaylin\", \"Jaylon\", \"Jaelen\", \"Jaelyn\", \"Jaelynn\", \"Jailyn\", \"Jailynn\", \"Jailen\", \"Jailon\")) %>%\n  arrange(Year)\n#find the sum of all Jalens (and variants) by year\njalen_natl <- aggregate(jalen_natl[\"Count\"],by=jalen_natl[\"Year\"],sum)\n\n#plot\nggplot(jalen_natl, aes(x=Year, y=Count)) +\n  geom_line(color=\"#69b3a2\", size=2, alpha=0.9) +\n  labs(title = \"The Rise and Fall of Jalen*\",\n              subtitle = \"*and variants\",\n              caption = str_wrap(\"spelling variants include: Jalen, Jalin, Jalyn, Jalon, Jaylen, Jaylyn, Jaylynn, Jaylin,   Jaylon, Jaelen, Jaelyn, Jaelynn, Jailyn, Jailynn, Jailen, Jailon\")) +\n  theme(plot.title=element_text(hjust=0.5, size = 20),\n        plot.subtitle=element_text(hjust=0.5))\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#filter out all the Jadens\njaden_natl <- us_names %>%\n  filter(Name %in% c(\"Jaden\", \"Jadin\", \"Jadyn\", \"Jayden\", \"Jaydon\", \"Jaydyn\", \"Jaydin\", \"Jaeden\", \"Jaedyn\", \"Jaedon\", \"Jaidyn\", \"Jaidon\", \"Jaiden\")) %>%\n  arrange(Year)\n#find the sum of all Jalens (and variants) by year\njaden_natl <- aggregate(jaden_natl[\"Count\"],by=jaden_natl[\"Year\"],sum)\n\njaden_natl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Year Count\n1  1974     9\n2  1976     7\n3  1977    22\n4  1978    13\n5  1979    28\n6  1980    13\n7  1981    38\n8  1982    32\n9  1983    28\n10 1984    31\n11 1985    44\n12 1986    42\n13 1987    47\n14 1988    54\n15 1989    98\n16 1990   107\n17 1991   165\n18 1992   251\n19 1993   358\n20 1994   758\n21 1995  1051\n22 1996  1321\n23 1997  1738\n24 1998  2842\n25 1999  5447\n26 2000  7867\n27 2001 11380\n28 2002 15066\n29 2003 18846\n30 2004 20578\n31 2005 22283\n32 2006 24052\n33 2007 32234\n34 2008 32271\n35 2009 30663\n36 2010 29446\n37 2011 27134\n38 2012 24142\n39 2013 21963\n40 2014 19179\n41 2015 16650\n42 2016 14689\n43 2017 13588\n44 2018 12293\n45 2019 11141\n46 2020  9817\n47 2021  9381\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot Jaden vs. Jalen\nggplot() +               \n  geom_area(data = jaden_natl, aes(x=Year, y=Count, fill=\"Jaden\"))+\n  geom_area(data = jalen_natl, aes(x=Year,y=Count, fill =\"Jalen\"))+\n  #removing years with few data points from the x-axis to enhance visibility\n  xlim(1990,2021)+\n  labs(title = \"Jalen* vs. Jaden*\",\n       subtitle = \"*and variants\")+\n  theme(plot.title=element_text(hjust=0.5, size = 20),\n        plot.subtitle=element_text(hjust=0.5))\n```\n\n::: {.cell-output-display}\n![](FinalProject_LindsayJones_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "FinalProject_LindsayJones_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}