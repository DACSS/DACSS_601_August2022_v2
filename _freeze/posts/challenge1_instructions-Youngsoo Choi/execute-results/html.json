{
  "hash": "b2283f337892ba391e6b613fb279944f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\nauthor: \"Young Soo Choi\"\ndesription: \"Reading in data and creating a post\"\ndate: \"08/15/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xlsx ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read data about birds\nlibrary(readr)\nbirds <- read_csv(\"_data/birds.csv\")\nView(birds)\n```\n:::\n\n\nThis dataset contains over 30000 birds' characters include area, years, etc.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count how many birds after 2000\na2000<-filter(birds, Year>=2000)\na2000\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10,945 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2000  2000\n 2 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2001  2001\n 3 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2002  2002\n 4 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2003  2003\n 5 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2004  2004\n 6 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2005  2005\n 7 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2006  2006\n 8 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2007  2007\n 9 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2008  2008\n10 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2009  2009\n# … with 10,935 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\ncount(a2000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1 10945\n```\n:::\n:::\n\n\nAnd the number of birds with year 2000 after is 10945.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}