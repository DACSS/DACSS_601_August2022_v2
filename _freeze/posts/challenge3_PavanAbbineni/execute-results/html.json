{
  "hash": "50f29bd1d400d72ec5abb852ac85f760",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Pavan Datta Abbineni \"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"08/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organicpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xlsx ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.csv üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimalWeights<-read_csv(\"_data/animal_weight.csv\",\n                        show_col_types = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(animalWeights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 17\n  IPCC A‚Ä¶¬π Cattl‚Ä¶¬≤ Cattl‚Ä¶¬≥ Buffa‚Ä¶‚Å¥ Swine‚Ä¶‚Åµ Swine‚Ä¶‚Å∂ Chick‚Ä¶‚Å∑ Chick‚Ä¶‚Å∏ Ducks Turkeys\n  <chr>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>\n1 Indian ‚Ä¶     275     110     295      28      28     0.9     1.8   2.7     6.8\n2 Eastern‚Ä¶     550     391     380      50     180     0.9     1.8   2.7     6.8\n3 Africa       275     173     380      28      28     0.9     1.8   2.7     6.8\n4 Oceania      500     330     380      45     180     0.9     1.8   2.7     6.8\n5 Western‚Ä¶     600     420     380      50     198     0.9     1.8   2.7     6.8\n6 Latin A‚Ä¶     400     305     380      28      28     0.9     1.8   2.7     6.8\n# ‚Ä¶ with 7 more variables: Sheep <dbl>, Goats <dbl>, Horses <dbl>, Asses <dbl>,\n#   Mules <dbl>, Camels <dbl>, Llamas <dbl>, and abbreviated variable names\n#   ¬π‚Äã`IPCC Area`, ¬≤‚Äã`Cattle - dairy`, ¬≥‚Äã`Cattle - non-dairy`, ‚Å¥‚ÄãBuffaloes,\n#   ‚Åµ‚Äã`Swine - market`, ‚Å∂‚Äã`Swine - breeding`, ‚Å∑‚Äã`Chicken - Broilers`,\n#   ‚Å∏‚Äã`Chicken - Layers`\n# ‚Ñπ Use `colnames()` to see all variable names\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(animalWeights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  9 17\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(animalWeights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"IPCC Area\"          \"Cattle - dairy\"     \"Cattle - non-dairy\"\n [4] \"Buffaloes\"          \"Swine - market\"     \"Swine - breeding\"  \n [7] \"Chicken - Broilers\" \"Chicken - Layers\"   \"Ducks\"             \n[10] \"Turkeys\"            \"Sheep\"              \"Goats\"             \n[13] \"Horses\"             \"Asses\"              \"Mules\"             \n[16] \"Camels\"             \"Llamas\"            \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data shows average animal weights per location. We will combine the animal name columns into one column to clean up the data.\n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     464.     483.\n2 USA      1990 NAFTA     972.    1156.\n3 France   1980 EU       -110.    -202.\n4 Mexico   1990 NAFTA    2185.    1460.\n5 USA      1980 NAFTA     717.    1325.\n6 France   1990 EU       1338.    1212.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\n\nOur original dataset has a total of 9 rows and 17 columns.  \nOut of these 17 columns except the country column the other 16 columns need to be pivoted.\nIn the new dataset the number of rows in the expected dataset is 9*16.\nNew dataset is 144x3.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(animalWeights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n\n```{.r .cell-code}\nncol(animalWeights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n\n```{.r .cell-code}\nnrow(animalWeights)*(ncol(animalWeights)-1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144\n```\n:::\n:::\n\n\nAny additional comments?\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 √ó 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing               464.\n 2 Mexico   1980 NAFTA incoming               483.\n 3 USA      1990 NAFTA outgoing               972.\n 4 USA      1990 NAFTA incoming              1156.\n 5 France   1980 EU    outgoing              -110.\n 6 France   1980 EU    incoming              -202.\n 7 Mexico   1990 NAFTA outgoing              2185.\n 8 Mexico   1990 NAFTA incoming              1460.\n 9 USA      1980 NAFTA outgoing               717.\n10 USA      1980 NAFTA incoming              1325.\n11 France   1990 EU    outgoing              1338.\n12 France   1990 EU    incoming              1212.\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewPivotedData<-pivot_longer(animalWeights, col = c(2:17),\n                 names_to=\"animal_type\",\n                 values_to = \"weight\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(newPivotedData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 3\n  `IPCC Area`         animal_type        weight\n  <chr>               <chr>               <dbl>\n1 Indian Subcontinent Cattle - dairy      275  \n2 Indian Subcontinent Cattle - non-dairy  110  \n3 Indian Subcontinent Buffaloes           295  \n4 Indian Subcontinent Swine - market       28  \n5 Indian Subcontinent Swine - breeding     28  \n6 Indian Subcontinent Chicken - Broilers    0.9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(newPivotedData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144   3\n```\n:::\n:::\n\nAny additional comments?\n\nThe expected dimensions of our pivoted data aligns with our experimentally calculated value. ",
    "supporting": [
      "challenge3_PavanAbbineni_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}