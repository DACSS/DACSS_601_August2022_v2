{
  "hash": "95b05a38a8f0467d93c5d937d381e417",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Miranda Manka\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"08/23/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - air_bnb\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nair_bnb = read_csv(\"_data/AB_NYC_2019.csv\", show_col_types = FALSE)\n```\n:::\n\n\n### Briefly describe the data\n\nThis is a dataset containing information about Airbnb listings in New York City. The variables include id and name of the listing, id and name of the host, neighborhood (including neighborhood group), latitude and longitude, room type, price, the minimum number of nights someone must book, number of reviews, last review date, reviews per month, the calculated count of host listings, and the availability (number out of 365/a year). Each row is a different listing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Replace in future with summarytools::dfSummary\nsummary(air_bnb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:48895       Min.   :     2438   Length:48895      \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033   Class :character  \n Median :19677284   Mode  :character   Median : 30793816   Mode  :character  \n Mean   :19017143                      Mean   : 67620011                     \n 3rd Qu.:29152178                      3rd Qu.:107434423                     \n Max.   :36487245                      Max.   :274321313                     \n                                                                             \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:48895        Length:48895       Min.   :40.50   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.96  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n                                                                        \n  room_type             price         minimum_nights    number_of_reviews\n Length:48895       Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n Class :character   1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Mode  :character   Median :  106.0   Median :   3.00   Median :  5.00   \n                    Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n                    3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n                    Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n                                                                         \n  last_review         reviews_per_month calculated_host_listings_count\n Min.   :2011-03-28   Min.   : 0.010    Min.   :  1.000               \n 1st Qu.:2018-07-08   1st Qu.: 0.190    1st Qu.:  1.000               \n Median :2019-05-19   Median : 0.720    Median :  1.000               \n Mean   :2018-10-04   Mean   : 1.373    Mean   :  7.144               \n 3rd Qu.:2019-06-23   3rd Qu.: 2.020    3rd Qu.:  2.000               \n Max.   :2019-07-08   Max.   :58.500    Max.   :327.000               \n NA's   :10052        NA's   :10052                                   \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n                 \n```\n:::\n:::\n\n\n## Tidy Data\n\nThe dataset seems to be pretty tidy already, I won't make any changes for now.\n\n## Time Dependent Visualizations\n\nThis first graph is a density graph which is good for looking at a time variable. This is a visualization of last_review, where there are 3 graphs (one for each room type). While each one isn't too different, there are some small differences for example the peak density value highest point for entire home/apt is greater than the peak for the other two room types.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = last_review, fill = room_type)) +\n  geom_density(alpha = 0.2) + \n  labs(title = \"Last Review Date for Airbnb Listings by Room Type\", \n     x = \"Date of Last Review\", y = \"Density\", fill = guide_legend(\"Room Type\")) + \n  theme_bw() + \n  facet_wrap(~ room_type, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](challenge6_MirandaManka_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThis next graph is also a density graph, since I am still looking at a time variable. This is a visualization of last_review, where there are 5 graphs (one for each neighborhood type). Similar to the last visualization, there are some small differences between each, like the shape and the highest density value reached (for example Staten Island reaches the highest point of almost 0.020, but Manhattan's highest density point is only 0.005).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = last_review, fill = neighbourhood_group)) +\n  geom_density(alpha = 0.2) + \n  labs(title = \"Last Review Date for Airbnb Listings by Neighborhood Group\", \n     x = \"Date of Last Review\", y = \"Density\", \n     fill = guide_legend(\"Neighborhood Group\")) + \n  theme_bw() + \n  scale_x_date(limits = as.Date(c(\"2015-01-01\",\"2019-07-08\"))) + \n  facet_wrap(~ neighbourhood_group, nrow = 3)\n```\n\n::: {.cell-output-display}\n![](challenge6_MirandaManka_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Visualizing Part-Whole Relationships\n\nI wanted to show similar plots for the same variables. I thought it would be interesting to display some of the available options to see how they are similar and differ. I think the grouped bar chart and the percent bar chart are the most clear and useful for determining proportions and totals. The stacked bar chart is just a little harder to read and determine the proportions without looking closely at the numbers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = neighbourhood_group, fill = room_type)) + \n  geom_bar(position = \"dodge\") + \n  labs(title = \"Airbnb Listings Grouped Bar Chart\", x = \"Neighborhood Group\", \n     y = \"Frequency\", fill = guide_legend(\"Room Type\")) + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge6_MirandaManka_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = neighbourhood_group, fill = room_type)) + \n  geom_bar(position = \"stack\") + \n  labs(title = \"Airbnb Listings Stacked Bar Chart\", x = \"Neighborhood Group\", \n     y = \"Frequency \", fill = guide_legend(\"Room Type\")) + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge6_MirandaManka_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(air_bnb, aes(x = neighbourhood_group, fill = room_type)) + \n  geom_bar(position = \"fill\") + \n  labs(title = \"Airbnb Listings Percent Bar Chart\", x = \"Neighborhood Group\", \n     y = \"Percent\", fill = guide_legend(\"Room Type\")) + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge6_MirandaManka_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge6_MirandaManka_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}