{
  "hash": "bf07dda7f9c8a31f1b05d2cbd0b9198e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Akhilesh\"\nauthor: \"Akhilesh Kumar Meghwal\"\ndescription: \"Introduction to Visualization\"\ndate: \"08/28/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_hh\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal ⭐\n-   pathogen cost ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   railroads ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal<-read_csv(\"_data/cereal.csv\", show_col_types = FALSE)\nnames(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Cereal\" \"Sodium\" \"Sugar\"  \"Type\"  \n```\n:::\n\n```{.r .cell-code}\ndim(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20  4\n```\n:::\n\n```{.r .cell-code}\nsummary(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Cereal              Sodium          Sugar           Type          \n Length:20          Min.   :  0.0   Min.   : 0.00   Length:20         \n Class :character   1st Qu.:137.5   1st Qu.: 4.00   Class :character  \n Mode  :character   Median :180.0   Median : 9.50   Mode  :character  \n                    Mean   :167.0   Mean   : 8.75                     \n                    3rd Qu.:202.5   3rd Qu.:12.50                     \n                    Max.   :340.0   Max.   :18.00                     \n```\n:::\n\n```{.r .cell-code}\nView(cereal)\n```\n:::\n\n\n### Briefly describe the data\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summarytools::dfSummary(cereal,\n                              varnumbers = FALSE,\n                              plain.ascii  = FALSE,\n                              style        = \"grid\",\n                              graph.magnif = 0.50,\n                              valid.col    = FALSE),\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>cereal</h4>\n<strong>Dimensions</strong>: 20 x 4\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"left\">Cereal\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. All Bran</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. Apple Jacks</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. Captain Crunch</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. Cheerios</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. Cinnamon Toast Crunch</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. Corn Flakes</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. Crackling Oat Bran</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. Fiber One</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. Froot Loops</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. Frosted Flakes</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 10 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">10</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">50.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAADIAAACIBAMAAABXQKWRAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkEFAoFHxGwsAAAAExJREFUSMdjYKAfUFJSFEQDUBll4+Elg9ungphgxIXOaLiNhtvgkBkNt9FwGw2dwSIzGm6j4TYaboNfhrxwwwBwe9CB0ZCWwe1TegAAUWTS95vc4qoAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDRUMjA6MTA6MDUrMDA6MDBaZkriAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTA0VDIwOjEwOjA1KzAwOjAwKzvyXgAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Sodium\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 167 (77.3)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 180 &le; 340</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 65 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">15 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAFEAAAA7BAMAAADxzns5AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkEFAoFHxGwsAAAAFVJREFUSMdjYBg6QBAFCCmBAKqYAHaVxkBgNKpyVOWoSjJVQjIbUSrBikZVEq0StRjDpxLV4OGrUgkOCKlURpUfVQlPUCCgQEglnBi+KpUIApjKoQAA6s7TCO9mSHQAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDRUMjA6MTA6MDUrMDA6MDBaZkriAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTA0VDIwOjEwOjA1KzAwOjAwKzvyXgAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Sugar\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 8.8 (5.3)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 9.5 &le; 18</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 8.5 (0.6)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">15 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAFEAAAA7BAMAAADxzns5AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkEFAoFHxGwsAAAAElJREFUSMdjYBg6QAkGBKEAQ0AAqlLZGAKMYBIYAqMqR1WOqiRaJSyjEVYJpY1HVY6qpLpKWDJUIKgSJjCqcmSrVCIIYCqHAgAAnKEWDCZ8rv0AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDktMDRUMjA6MTA6MDUrMDA6MDBaZkriAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA5LTA0VDIwOjEwOjA1KzAwOjAwKzvyXgAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Type\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. A</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. C</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">10</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">50.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">10</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">50.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAADIAAAAfBAMAAABXI4NqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gkEFAoFHxGwsAAAACRJREFUKM9jYKAfUMIEUBllY3RgNExlcIeBICYYDTciwo0eAABA7k5MfLiZsAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0wOS0wNFQyMDoxMDowNSswMDowMFpmSuIAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMDktMDRUMjA6MTA6MDUrMDA6MDArO/JeAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.1)<br/>2022-09-04</p>\n</div>\n```\n:::\n:::\n\n\n- The dataset 'cereal' contains sodium, sugar value along with 'type of cereal' for each cereal type.\n- There are 20 different type of cereals\n- Type column variable has two values: 'A' and 'C', both have frequency of 10\n- 'Sodium' column variable has min, max, mean values of 0, 340, 167 respectively\n- 'Sugar' column variable has min, max, mean values of 0, 18, 8.75 respectively\n-  For 'A' type cereals min, max, mean values of 'Sodium' is 0, 340, 149 respectively\n-  For 'A' type cereals min, max, mean values of 'Sugar' is 0, 18, 9.22 respectively\n-  For 'C' type cereals min, max, mean values of 'Sodium' is 130, 290, 185 respectively\n-  For 'C' type cereals min, max, mean values of 'Sugar' is 1, 14, 9.2 respectively\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal <- pivot_longer(cereal, cols= c('Sodium', 'Sugar'), names_to='Nutrient_type', values_to ='Value') \n```\n:::\n\n# Sanity check\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  Cereal              Type  Nutrient_type Value\n  <chr>               <chr> <chr>         <dbl>\n1 Frosted Mini Wheats A     Sodium            0\n2 Frosted Mini Wheats A     Sugar            11\n3 Raisin Bran         A     Sodium          340\n4 Raisin Bran         A     Sugar            18\n5 All Bran            A     Sodium           70\n6 All Bran            A     Sugar             5\n```\n:::\n\n```{.r .cell-code}\nstr(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [40 × 4] (S3: tbl_df/tbl/data.frame)\n $ Cereal       : chr [1:40] \"Frosted Mini Wheats\" \"Frosted Mini Wheats\" \"Raisin Bran\" \"Raisin Bran\" ...\n $ Type         : chr [1:40] \"A\" \"A\" \"A\" \"A\" ...\n $ Nutrient_type: chr [1:40] \"Sodium\" \"Sugar\" \"Sodium\" \"Sugar\" ...\n $ Value        : num [1:40] 0 11 340 18 70 5 140 14 200 12 ...\n```\n:::\n\n```{.r .cell-code}\nsummary(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Cereal              Type           Nutrient_type          Value       \n Length:40          Length:40          Length:40          Min.   :  0.00  \n Class :character   Class :character   Class :character   1st Qu.:  8.50  \n Mode  :character   Mode  :character   Mode  :character   Median : 17.00  \n                                                          Mean   : 87.88  \n                                                          3rd Qu.:180.00  \n                                                          Max.   :340.00  \n```\n:::\n\n```{.r .cell-code}\nView(cereal)\n```\n:::\n\n\n### NA primary check\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNA_SUM <- sum(is.na(cereal))\nView(cereal)\n```\n:::\n\n\nNA_SUM is zero, so there is no NA value in the dataset\n\n\n#### Mutate to change class of 'Cereal' column from character to factor\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal <- cereal %>% \n  mutate_at(c('Cereal', 'Type', 'Nutrient_type'), factor)\n```\n:::\n\n- 'Cereal', 'Type'& 'Nutrient_type'\tcolumns are character class, need to be converted to factor and reorder for graphic visualization.\n\n- Remaining columns are numeric and don't need mutation, \n\n- String values in the column, can be represented numerically by setting numeric labels\n\n- Factors are important for indicating subsets of dataset for categorical variables, also Reordering helps in alignment of graphs\n\n\n## Univariate Visualizations\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- cereal %>% \n  group_by(Nutrient_type, Type) %>% \n  summarise(sum(Value),.groups = 'keep') %>% \n  rename(nutrient_value = `sum(Value)`)\n\nggplot(b, aes(nutrient_value, fill = Type)) + \n  geom_histogram(binwidth = 20) + \n  labs(title = \"Sodium/Sugar Values\") + \n  theme_bw() +\n  facet_wrap(Nutrient_type~Type, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](challenge5_Akhilesh_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cereal, aes(x=Cereal, y=Value)) + \n  geom_bar(stat = \"identity\")+theme(axis.text.x=element_text(angle=90,hjust=1))+\n  facet_wrap(~'Nutrient_type')+\n  labs(title = \"Bar Graph on Cereal wise Value\")\n```\n\n::: {.cell-output-display}\n![](challenge5_Akhilesh_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nAny additional comments?\n",
    "supporting": [
      "challenge5_Akhilesh_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}