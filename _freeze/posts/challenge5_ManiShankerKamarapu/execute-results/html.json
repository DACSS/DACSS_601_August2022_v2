{
  "hash": "140501a17114580cb80589fa56eac08e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Mani Shanker Kamarapu\"\ndescription: \"Introduction to Visualization\"\ndate: \"08/22/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - AB_NYC_2019\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_2019 <- read_csv(\"_data/AB_NYC_2019.csv\") %>%\n  select(!c(\"id\", \"host_id\", \"neighbourhood\", \"latitude\", \"longitude\", \"minimum_nights\", \"last_review\"))\nAB_NYC_2019\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 9\n   name            host_…¹ neigh…² room_…³ price numbe…⁴ revie…⁵ calcu…⁶ avail…⁷\n   <chr>           <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Clean & quiet … John    Brookl… Privat…   149       9    0.21       6     365\n 2 Skylit Midtown… Jennif… Manhat… Entire…   225      45    0.38       2     355\n 3 THE VILLAGE OF… Elisab… Manhat… Privat…   150       0   NA          1     365\n 4 Cozy Entire Fl… LisaRo… Brookl… Entire…    89     270    4.64       1     194\n 5 Entire Apt: Sp… Laura   Manhat… Entire…    80       9    0.1        1       0\n 6 Large Cozy 1 B… Chris   Manhat… Entire…   200      74    0.59       1     129\n 7 BlissArtsSpace! Garon   Brookl… Privat…    60      49    0.4        1       0\n 8 Large Furnishe… Shunic… Manhat… Privat…    79     430    3.47       1     220\n 9 Cozy Clean Gue… MaryEl… Manhat… Privat…    79     118    0.99       1       0\n10 Cute & Cozy Lo… Ben     Manhat… Entire…   150     160    1.33       4     188\n# … with 48,885 more rows, and abbreviated variable names ¹​host_name,\n#   ²​neighbourhood_group, ³​room_type, ⁴​number_of_reviews, ⁵​reviews_per_month,\n#   ⁶​calculated_host_listings_count, ⁷​availability_365\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895     9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name            host_name         neighbourhood_group  room_type        \n Length:48895       Length:48895       Length:48895        Length:48895      \n Class :character   Class :character   Class :character    Class :character  \n Mode  :character   Mode  :character   Mode  :character    Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n                                                                             \n     price         number_of_reviews reviews_per_month\n Min.   :    0.0   Min.   :  0.00    Min.   : 0.010   \n 1st Qu.:   69.0   1st Qu.:  1.00    1st Qu.: 0.190   \n Median :  106.0   Median :  5.00    Median : 0.720   \n Mean   :  152.7   Mean   : 23.27    Mean   : 1.373   \n 3rd Qu.:  175.0   3rd Qu.: 24.00    3rd Qu.: 2.020   \n Max.   :10000.0   Max.   :629.00    Max.   :58.500   \n                                     NA's   :10052    \n calculated_host_listings_count availability_365\n Min.   :  1.000                Min.   :  0.0   \n 1st Qu.:  1.000                1st Qu.:  0.0   \n Median :  1.000                Median : 45.0   \n Mean   :  7.144                Mean   :112.8   \n 3rd Qu.:  2.000                3rd Qu.:227.0   \n Max.   :327.000                Max.   :365.0   \n                                                \n```\n:::\n:::\n\n\n## Tidy Data (as needed)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_2019 <- replace_na(AB_NYC_2019, list(reviews_per_month = 0))\nAB_NYC_2019\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 9\n   name            host_…¹ neigh…² room_…³ price numbe…⁴ revie…⁵ calcu…⁶ avail…⁷\n   <chr>           <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Clean & quiet … John    Brookl… Privat…   149       9    0.21       6     365\n 2 Skylit Midtown… Jennif… Manhat… Entire…   225      45    0.38       2     355\n 3 THE VILLAGE OF… Elisab… Manhat… Privat…   150       0    0          1     365\n 4 Cozy Entire Fl… LisaRo… Brookl… Entire…    89     270    4.64       1     194\n 5 Entire Apt: Sp… Laura   Manhat… Entire…    80       9    0.1        1       0\n 6 Large Cozy 1 B… Chris   Manhat… Entire…   200      74    0.59       1     129\n 7 BlissArtsSpace! Garon   Brookl… Privat…    60      49    0.4        1       0\n 8 Large Furnishe… Shunic… Manhat… Privat…    79     430    3.47       1     220\n 9 Cozy Clean Gue… MaryEl… Manhat… Privat…    79     118    0.99       1       0\n10 Cute & Cozy Lo… Ben     Manhat… Entire…   150     160    1.33       4     188\n# … with 48,885 more rows, and abbreviated variable names ¹​host_name,\n#   ²​neighbourhood_group, ³​room_type, ⁴​number_of_reviews, ⁵​reviews_per_month,\n#   ⁶​calculated_host_listings_count, ⁷​availability_365\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895     9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name            host_name         neighbourhood_group  room_type        \n Length:48895       Length:48895       Length:48895        Length:48895      \n Class :character   Class :character   Class :character    Class :character  \n Mode  :character   Mode  :character   Mode  :character    Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n     price         number_of_reviews reviews_per_month\n Min.   :    0.0   Min.   :  0.00    Min.   : 0.000   \n 1st Qu.:   69.0   1st Qu.:  1.00    1st Qu.: 0.040   \n Median :  106.0   Median :  5.00    Median : 0.370   \n Mean   :  152.7   Mean   : 23.27    Mean   : 1.091   \n 3rd Qu.:  175.0   3rd Qu.: 24.00    3rd Qu.: 1.580   \n Max.   :10000.0   Max.   :629.00    Max.   :58.500   \n calculated_host_listings_count availability_365\n Min.   :  1.000                Min.   :  0.0   \n 1st Qu.:  1.000                1st Qu.:  0.0   \n Median :  1.000                Median : 45.0   \n Mean   :  7.144                Mean   :112.8   \n 3rd Qu.:  2.000                3rd Qu.:227.0   \n Max.   :327.000                Max.   :365.0   \n```\n:::\n:::\n\n\n## Univariate Visualizations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019, aes(price)) + \n  geom_histogram(fill = \"blue\") + \n  xlim(0,1700) +\n  labs(title = \"Price of the room\", x = \"Price\", y = \"Frequency\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_ManiShankerKamarapu_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019, aes(number_of_reviews)) + \n  geom_histogram(fill = \"lightgreen\") + \n  xlim(0,400) +\n  labs(title = \"No of reviews\", x = \"Reviews\", y = \"Frequency\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_ManiShankerKamarapu_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019, aes(reviews_per_month)) + \n  geom_histogram(fill = \"red\") + \n  xlim(0,15) +\n  labs(title = \"Reviews in a month\", x = \"Monthly reviews\", y = \"Frequency\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_ManiShankerKamarapu_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019, aes(availability_365)) + \n  geom_histogram(fill = \"orange\") + \n  xlim(0,370) +\n  labs(title = \"Availability of the room\", x = \"Availability\", y = \"Frequency\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_ManiShankerKamarapu_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019, aes(price, room_type)) + \n  geom_point() + \n  labs(title = \"Price and Room Type\", x = \"Price\", y = \"Room Type\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_ManiShankerKamarapu_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge5_ManiShankerKamarapu_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}