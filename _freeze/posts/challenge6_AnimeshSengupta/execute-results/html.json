{
  "hash": "6b594f96f27f067b9679d42c26699c38",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Animesh Sengupta\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"08/23/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - usa_hh\n  - Animesh Sengupta\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(summarytools)\nlibrary(plotly)\nlibrary(stringr)\nlibrary(ggalluvial)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in library(ggalluvial): there is no package called 'ggalluvial'\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n  - usa_hh ⭐⭐⭐\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#! label: Data loading\nUS_household_data <- read_excel(\"../posts/_data/USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx\",skip = 5, n_max = 353, col_names = c( \"Year\", \"Number\",\"Total\",\"pd_<15000\",\"pd_15000-24999\",\"pd_25000-34999\",\"pd_35000-49999\",\"pd_50000-74999\",\"pd_75000-99999\",\"pd_100000-149999\",\"pd_150000-199999\",\"pd_>200000\",\"median_income_estimate\",\"median_income_moe\",\"mean_income_estimate\",\"mean_income_moe\"))\n\nhead(US_household_data,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 16\n  Year      Number Total pd_<1…¹ pd_15…² pd_25…³ pd_35…⁴ pd_50…⁵ pd_75…⁶ pd_10…⁷\n  <chr>     <chr>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 ALL RACES <NA>      NA    NA      NA      NA      NA      NA      NA      NA  \n2 2019      128451   100     9.1     8       8.3    11.7    16.5    12.3    15.5\n3 2018      128579   100    10.1     8.8     8.7    12      17      12.5    15  \n4 2017 2    127669   100    10       9.1     9.2    12      16.4    12.4    14.7\n5 2017      127586   100    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n# … with 6 more variables: `pd_150000-199999` <dbl>, `pd_>200000` <dbl>,\n#   median_income_estimate <dbl>, median_income_moe <dbl>,\n#   mean_income_estimate <chr>, mean_income_moe <chr>, and abbreviated variable\n#   names ¹​`pd_<15000`, ²​`pd_15000-24999`, ³​`pd_25000-34999`,\n#   ⁴​`pd_35000-49999`, ⁵​`pd_50000-74999`, ⁶​`pd_75000-99999`,\n#   ⁷​`pd_100000-149999`\n# ℹ Use `colnames()` to see all variable names\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\nThe US household data is anything but tidy. Here are the following few operations that have been performed to make it tidy:\n1. Separating Race and Year from one column\n2. Mutating dataframe to include race column\n3. Removing trailing character from both race and column\n4. Converting Number and Year Numerical columns from character to number.\n5. pivoting percent distribution into 2 columns[income_Range and percent_distribution] from 9 different income range feature of data .\n6. Grouped multi sub + common races into more generic races\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#! label: Data processing\nUS_processed_data <- US_household_data%>%\n  rowwise()%>% #to ensure the following operation runs row wise\n  mutate(Race=case_when(\n    is.na(Number) ~ Year\n  ))%>%\n  ungroup()%>% # to stop rowwise operation\n  fill(Race,.direction = \"down\")%>%\n  subset(!is.na(Number))%>%\n  rowwise()%>%\n  mutate(\n    Year=strsplit(Year,' ')[[1]][1],\n    Race=ifelse(grepl(\"[0-9]\", Race ,perl=TRUE)[1],strsplit(Race,\" \\\\s*(?=[^ ]+$)\",perl=TRUE)[[1]][1],Race),\n    mean_income_estimate=as.numeric(mean_income_estimate),\n    Number=as.numeric(Number),\n    Year=as.numeric(Year),\n    CombinedRace=case_when(\n      str_detect(Race,\"ASIAN\")~\"ASIAN\",\n      str_detect(Race,\"BLACK\")~\"BLACK\",\n      str_detect(Race,\"WHITE\")~\"WHITE\",\n      TRUE ~ Race\n    )\n  )%>%\n  pivot_longer(\n    cols = starts_with(\"pd\"),\n    names_to = \"income_range\",\n    values_to = \"percent_distribution\",\n    names_prefix=\"pd_\"\n  )\nview(dfSummary(US_processed_data))\n```\n:::\n\n\n## Time Dependent Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\n#!label: Time dependent visualization\ntime_viz<-ggplot(US_processed_data,aes(x=Year,y=percent_distribution,fill=factor(income_range, levels=c(\">200000\",\"150000-199999\",\"100000-149999\",\"75000-99999\",\"50000-74999\",\"35000-49999\",\"25000-34999\",\"15000-24999\",\"<15000\"\n))))+\n  geom_bar(position=\"stack\",stat=\"identity\")+\n  facet_wrap(vars(CombinedRace))+\n  theme(legend.position = \"bottom\")+\n  labs(title=\"Income range percent distribution change across Years for every Race Category\")\ntime_viz\n```\n\n::: {.cell-output-display}\n![](challenge6_AnimeshSengupta_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nThis above graph shows the change in income range percentage distribution for multiple years. The total stacked value should be 100 but there are multiple places where for a year it is going beyond 100, this means there are multiple data for that Race, Year group. We need to sanitise the data. This graph was chosen to efficiently convey the change in income distribution for mulitple races across multiple years.\n\nFurther work that i need help with:\neliminate redundant Data.\nIncrease facet_wrap size\nFix the legend and wrap text\n\n\n## Visualizing Part-Whole Relationships\n\n::: {.cell}\n\n```{.r .cell-code}\nalluvial_viz<-ggplot(US_processed_data,aes(axis1=CombinedRace,axis2=income_range,y=percent_distribution))+\n  geom_alluvium(aes(fill=CombinedRace))+\n  geom_stratum()+\n  geom_stratum(aes(fill = CombinedRace))+\n  geom_text(stat = \"stratum\",size=3,\n            aes(label = after_stat(stratum)))+\n  theme_void()+\n  labs(title=\"Income range distribution across different races\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in geom_alluvium(aes(fill = CombinedRace)): could not find function \"geom_alluvium\"\n```\n:::\n\n```{.r .cell-code}\nalluvial_viz\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'alluvial_viz' not found\n```\n:::\n:::\n\n\nThe above plot shows a Part-whole visualization using flow data. I wanted to analyse the percent distribution trend to the income range across multiple races. The alluvial graph is the most intuitive and creative due to its unique relational mapping. Due to its relational mapping aesthetics made me choose this. \n",
    "supporting": [
      "challenge6_AnimeshSengupta_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}