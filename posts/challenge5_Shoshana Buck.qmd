---
title: "Challenge 5 Instructions"
author: "Shoshana Buck"
description: "Introduction to Visualization"
date: "08/22/2022"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_5
  - railroads
  - cereal
  - air_bnb
  - pathogen_cost
  - australian_marriage
  - public_schools
  - usa_hh
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(plotly)
library(gapminder)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

```{r}
cereal<- read_csv("_data/cereal.csv")
cereal
```

### Briefly describe the data
This data set contains the nutritional value and type of 20 different cereal brands. The data focuses on sodium and sugar in these specific brands along with the type of cereal it is. I believe that C = cold cereal and I am assuming A = hot cereal.   

## Tidy Data (as needed)
The data is already is tidy so in this case there is no reason to do a sanity check. I know that the data does is tidy because when I first read in the data is was easy to read and organized. Additionally, none of the data has to be pivoted_longer() nor is there a need for the n*2(k-2) formula.

## Univariate Visualizations
```{r}
# Creating a ggplot 

cereal_1 <- ggplot(data= cereal) +
  geom_point( mapping = aes(x = Cereal, y = Sodium, color = Cereal))

 cereal_2 <- cereal_1 +
  theme(axis.text.x = element_blank())
 cereal_2
ggplotly(cereal_2)

```



## Bivariate Visualization(s)
```{r}
new_cereal <- ggplot(data = cereal) +
  geom_point(mapping = aes(x = Type, y = Sugar, color = Type))
new_cereal

ggplotly(new_cereal)

```
In the bivariate graph I used the function ggplot() to compare the type with the amount of sugar that is in one of the 20 cereals. I then used the function ggplotly() to make the graph interactive so when you hover over a point it tell what type it is, how much sugar, and what the cereal brand is.
