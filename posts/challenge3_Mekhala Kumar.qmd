---
title: "Challenge 3 "
author: "Mekhala Kumar"
desription: "Tidy Data: Pivoting"
date: "08/17/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - organicpoultry
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Cleaning data and the reasoning for using pivot

The dataset used was organicpoultry. It contains information about the quantity of different poultry types for all months across the years 2004 to 2013. Currently the month and year data all fall under a single column. In order to make the data easy to interpret, first, the column with the data of the month and year need to be separated into two columns.\
Following which, the data needs to be pivoted in such a manner that the years become columns and the types of poultry become rows. This format will make it easier to select a subgroup within the types of poultry and compare the changes across years.\

```{r}
library(readxl)
library(tidyverse)
eggpoul <- read_excel("_data/organiceggpoultry.xls",skip=4)
View(eggpoul)
colnames(eggpoul)
eggpoul=subset(eggpoul,select=-c(...6))
tail(eggpoul, 10)
head(eggpoul)
str(eggpoul)
eggpoul<-eggpoul%>%
   mutate(`Bone-in Breast` = parse_number(na_if(`Bone-in Breast`, "too few")),
           Thighs = parse_number(na_if(Thighs, "too few")))
eggpoul<-eggpoul %>% separate(1, c("Month", "Year"), extra = "drop", fill = "right")
vec<-rep(c(1,2,3,4,5,6,7,8,9,10),each=12)
eggpoul$Year[vec==1] <- 2004
eggpoul$Year[vec==2] <- 2005
eggpoul$Year[vec==3] <- 2006
eggpoul$Year[vec==4] <- 2007
eggpoul$Year[vec==5] <- 2008
eggpoul$Year[vec==6] <- 2009
eggpoul$Year[vec==7] <- 2010
eggpoul$Year[vec==8] <- 2011
eggpoul$Year[vec==9] <- 2012
eggpoul$Year[vec==10] <- 2013
dim(eggpoul)
```

### Challenge: Describe the final dimensions

The original dataset has 120 rows and 11 columns. 2 of the variables are being used to identify a case. Hence,after pivoting, we expect to have 1080 rows and 4 columns. It is anticipated that the data will be long (taller).

```{r}
#existing rows/cases
nrow(eggpoul)

#existing columns/cases
ncol(eggpoul)

#expected rows/cases
nrow(eggpoul) * (ncol(eggpoul)-2)

# expected columns 
(11-9)+2

```

### Challenge: Pivot the Chosen Data

After pivoting, the data has become taller. Pivoting has also ensured that all the variables of poultry types have been kept in a single column and the values corresponding to them are easy to access.

```{r}
eggpoul<-pivot_longer(eggpoul, 3:11, names_to = "Type of Poultry", values_to = "Amount")
dim(eggpoul)
View(eggpoul)
```
