---
title: "Challenge 3"
author: "Mani Shanker Kamarapu"
desription: "Tidy Data: Pivoting"
date: "08/17/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - Australian_marriage_law
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(readxl)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Read in data

```{r}
vote_response <- read_excel("_data/australian_marriage_law_postal_survey_2017_-_response_final.xls", sheet = "Table 2", skip = 7, col_names = c("Area", "Yes", "Yes_P", "No", "No_P", "Totalclear", "Totalclear_P", "Empty", "clear", "clear_P", "Not_Eligible", "Not_Eligible_P", "NoResponse", "NoResponse_P", "Total", "Total_P")) %>%
  select("Area", "Yes", "No", "Not_Eligible", "NoResponse", "Total") %>%
  drop_na("Area") %>%
  filter(!grepl("Total", Area))
R <- nrow(vote_response)-7
vote_response <- slice(vote_response, 1:R)
view(vote_response)
```

The data is on the postal survey of Australian Electoral Roll. It contains the data of the eligible participants and responses of the participants in federal election as at 24 August 2017. It has data based on different federal electoral divisions survey by the Australian Election Commission. It is basically the total number of response we got in each division during the federal election. The data set is untidy and variables are not defined correctly and there are a lot of extra variables which are not required and a bunch of NA values. So using different R functions to remove unwanted variables and drop some NA values and also remove extra rows.

## Separating different divisions and areas

```{r}
vote_response <- vote_response %>%
  mutate(Division = case_when(
    str_ends(Area, "Divisions") ~ Area,
    TRUE ~ NA_character_ )) %>%
  fill(Division) %>%
  drop_na("Yes")
View(vote_response)
```

After we read the data and did some hard coding along with read, now we have separated the divisions row from the area column and formed a new column so we can use it as a grouping variable. 

## Using Pivot to tidy data

```{r}
vote_response <- pivot_longer(vote_response, Yes:Total, names_to = "Response", values_to = "Count")
View(vote_response)
```

I have used pivot_longer to tidy the data set where I have collapse the responses(Yes, No, Not_Eligible, NoResponse and Total) into one column so we can vary them easily and really make sense. So now we can get the divisional level count or area level count easily and we can also plot it easily now in different ways.
